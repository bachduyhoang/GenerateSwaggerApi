{
  "openapi": "3.0.1",
  "info": {
      "title": "Auction API",
      "description": "APIs for Auction Project",
      "version": "v1"
  },
  "servers": [
      {
          "url": "https://localhost:8001"
      }
  ],
  "paths": {
      "/admin/accounts/account-registrations": {
          "get": {
              "tags": [
                  "AdminAccount"
              ],
              "summary": "Get list of account registrations based on the filter (Auth)",
              "parameters": [
                  {
                      "name": "statusRequest",
                      "in": "query",
                      "schema": {
                          "$ref": "#/components/schemas/AccountRegistrationStatus"
                      }
                  },
                  {
                      "name": "OrderBy",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "IsDescending",
                      "in": "query",
                      "schema": {
                          "type": "boolean"
                      }
                  },
                  {
                      "name": "Search",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "CurrentPage",
                      "in": "query",
                      "schema": {
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "name": "Limit",
                      "in": "query",
                      "schema": {
                          "maximum": 100,
                          "minimum": 0,
                          "type": "integer",
                          "format": "int32"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return list of account registrations based on the filter",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/SimpleAccountRegistrationResultPagedResultResponse"
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "If the access token is invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/accounts/account-registrations/{accountRegistrationId}": {
          "get": {
              "tags": [
                  "AdminAccount"
              ],
              "summary": "Get account registration detail by Id (Auth)",
              "parameters": [
                  {
                      "name": "accountRegistrationId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Account registration detail",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/AccountRegistrationResultResponse"
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "If the access token is invalid"
                  },
                  "404": {
                      "description": "If the account registration is not found"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/accounts/account-registrations/{accountRegistrationId}/approve": {
          "put": {
              "tags": [
                  "AdminAccount"
              ],
              "summary": "Approve an account registration (Auth)",
              "parameters": [
                  {
                      "name": "accountRegistrationId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateAccountRegistrationStatusRequest"
                          }
                      },
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateAccountRegistrationStatusRequest"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateAccountRegistrationStatusRequest"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateAccountRegistrationStatusRequest"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Return message \"Success\" if update successfully",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/BooleanResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/accounts/account-registrations/{accountRegistrationId}/reject": {
          "put": {
              "tags": [
                  "AdminAccount"
              ],
              "summary": "Reject an account registration (Auth)",
              "parameters": [
                  {
                      "name": "accountRegistrationId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateAccountRegistrationStatusRequest"
                          }
                      },
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateAccountRegistrationStatusRequest"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateAccountRegistrationStatusRequest"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateAccountRegistrationStatusRequest"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Return message \"Success\" if update successfully",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/BooleanResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/accounts/account-registrations/{accountRegistrationId}/remarks": {
          "get": {
              "tags": [
                  "AdminAccount"
              ],
              "summary": "Get remarks of rejected account registration (Auth)",
              "parameters": [
                  {
                      "name": "accountRegistrationId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return list of remarks of rejected account registration",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/RemarkResponseIEnumerableResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/accounts/{businessAccountId}/max-bid-quantity": {
          "get": {
              "tags": [
                  "AdminAccount"
              ],
              "summary": "Get default bid max rec quantity by Business account id (Auth)",
              "parameters": [
                  {
                      "name": "businessAccountId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return default bid max rec quantity",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Int64Response"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          },
          "put": {
              "tags": [
                  "AdminAccount"
              ],
              "summary": "Update bid max rec quantity by Business account id (Auth)",
              "parameters": [
                  {
                      "name": "businessAccountId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateBidMaxRecQuantityRequest"
                          }
                      },
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateBidMaxRecQuantityRequest"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateBidMaxRecQuantityRequest"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateBidMaxRecQuantityRequest"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Return default max rec bid quantity",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/BooleanResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/accounts/account-registrations/export": {
          "get": {
              "tags": [
                  "AdminAccount"
              ],
              "summary": "Export list of account registrations based on the filter (Auth)",
              "parameters": [
                  {
                      "name": "Status",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "CompanyName",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return list of account registrations based on the filter",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/StringResponse"
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "If the access token is invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/accounts": {
          "get": {
              "tags": [
                  "AdminAccount"
              ],
              "summary": "Get list of account registrations based on the filter (Auth)",
              "parameters": [
                  {
                      "name": "businessType",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "country",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "OrderBy",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "IsDescending",
                      "in": "query",
                      "schema": {
                          "type": "boolean"
                      }
                  },
                  {
                      "name": "Search",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "CurrentPage",
                      "in": "query",
                      "schema": {
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "name": "Limit",
                      "in": "query",
                      "schema": {
                          "maximum": 100,
                          "minimum": 0,
                          "type": "integer",
                          "format": "int32"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return list of account registrations based on the filter",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/BusinessAccountResponsePagedResultResponse"
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "If the access token is invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/accounts/export": {
          "get": {
              "tags": [
                  "AdminAccount"
              ],
              "summary": "Get list of account registrations based on the filter (Auth)",
              "parameters": [
                  {
                      "name": "businessType",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "country",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "OrderBy",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "IsDescending",
                      "in": "query",
                      "schema": {
                          "type": "boolean"
                      }
                  },
                  {
                      "name": "Search",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "CurrentPage",
                      "in": "query",
                      "schema": {
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "name": "Limit",
                      "in": "query",
                      "schema": {
                          "maximum": 100,
                          "minimum": 0,
                          "type": "integer",
                          "format": "int32"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return list of account registrations based on the filter",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/StringResponse"
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "If the access token is invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/accounts/{businessAccountId}": {
          "get": {
              "tags": [
                  "AdminAccount"
              ],
              "summary": "Get business account information (Auth)",
              "parameters": [
                  {
                      "name": "businessAccountId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return list of account registrations based on the filter",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/BusinessAccountInformationResultPagedResultResponse"
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "If the access token is invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          },
          "put": {
              "tags": [
                  "AdminAccount"
              ],
              "summary": "Update business account information (Auth)",
              "parameters": [
                  {
                      "name": "businessAccountId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateBusinessAccountInformationRequest"
                          }
                      },
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateBusinessAccountInformationRequest"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateBusinessAccountInformationRequest"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateBusinessAccountInformationRequest"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Return list of account registrations based on the filter",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/BooleanResponse"
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "If the access token is invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/auctions": {
          "get": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Get list of auctions based on the filter (Auth)",
              "parameters": [
                  {
                      "name": "request",
                      "in": "query",
                      "schema": {
                          "$ref": "#/components/schemas/AuctionFilterRequest"
                      }
                  },
                  {
                      "name": "OrderBy",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "IsDescending",
                      "in": "query",
                      "schema": {
                          "type": "boolean"
                      }
                  },
                  {
                      "name": "Search",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "CurrentPage",
                      "in": "query",
                      "schema": {
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "name": "Limit",
                      "in": "query",
                      "schema": {
                          "maximum": 100,
                          "minimum": 0,
                          "type": "integer",
                          "format": "int32"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return list of auctions based on the filter",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/SimpleAuctionResultPagedResultResponse"
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "If the access token is invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          },
          "post": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Create an auction API (Auth)",
              "requestBody": {
                  "content": {
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateAuctionRequest"
                          }
                      },
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateAuctionRequest"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateAuctionRequest"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateAuctionRequest"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Return AuctionId",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/AuctionIdResultResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/auctions/{auctionId}": {
          "get": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Get auction detail by Auction Id (Auth)",
              "parameters": [
                  {
                      "name": "auctionId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Auction detail with all auction items and bidders",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/AuctionResultResponse"
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "If the access token is invalid"
                  },
                  "404": {
                      "description": "If the auction is not found"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          },
          "put": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Update auction settings (Auth)",
              "parameters": [
                  {
                      "name": "auctionId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateAuctionRequest"
                          }
                      },
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateAuctionRequest"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateAuctionRequest"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateAuctionRequest"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Return true if the action is success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/BooleanResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          },
          "delete": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Delete a specific auction, allow to delete when the auction is not happened yet. (Auth)",
              "parameters": [
                  {
                      "name": "auctionId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/BooleanResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/auctions/{auctionId}/available-items": {
          "get": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Get available REC items (Spot RECs) of the seller from ReHash platform (Auth)",
              "parameters": [
                  {
                      "name": "auctionId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return all of rec item available group by country, fuel type, vintage",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/StringStringInt32DecimalDictionaryDictionaryDictionaryResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/auctions/{auctionId}/items": {
          "post": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Add auction items (RECs that seller want to sell) (Auth)",
              "parameters": [
                  {
                      "name": "auctionId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateAuctionItemsRequest"
                          }
                      },
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateAuctionItemsRequest"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateAuctionItemsRequest"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateAuctionItemsRequest"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Return all of auction items",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/AuctionItemResultIEnumerableResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/auctions/{auctionId}/items/{auctionItemId}": {
          "delete": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Delete a specific auction item (Auth)",
              "parameters": [
                  {
                      "name": "auctionId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  },
                  {
                      "name": "auctionItemId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/BooleanResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/auctions/bids/{bidId}": {
          "put": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Update a specific bid, admin can update any bid (Auth)",
              "parameters": [
                  {
                      "name": "bidId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateBidAuctionItemRequest"
                          }
                      },
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateBidAuctionItemRequest"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateBidAuctionItemRequest"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateBidAuctionItemRequest"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Return message \"Success\" if update successfully",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/BooleanResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/bid-history-logs/{bidId}": {
          "get": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Get bid history by BidId (Auth)",
              "parameters": [
                  {
                      "name": "bidId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return bid history of a specific bid",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/BidLogResultIEnumerableResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/all-bids-result/auction-items/{auctionItemId}": {
          "get": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Get all bids by auctionId (include won bids and lost bids) (Auth)",
              "parameters": [
                  {
                      "name": "auctionItemId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  },
                  {
                      "name": "OrderBy",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "IsDescending",
                      "in": "query",
                      "schema": {
                          "type": "boolean"
                      }
                  },
                  {
                      "name": "Search",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "CurrentPage",
                      "in": "query",
                      "schema": {
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "name": "Limit",
                      "in": "query",
                      "schema": {
                          "maximum": 100,
                          "minimum": 0,
                          "type": "integer",
                          "format": "int32"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return all bids result of the auction",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/BidResultPagedResultResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/get-seller-by-seller-id/{sellerId}": {
          "get": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Get seller by sellerId (Auth)",
              "parameters": [
                  {
                      "name": "sellerId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "SellerResult object",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/SellerResult"
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "If the access token is invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/tick-sizes": {
          "get": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Get tick sizes on Auction Platform (Auth)",
              "responses": {
                  "200": {
                      "description": "Success"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          },
          "post": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Create tick size on Auction Platform (Auth)",
              "requestBody": {
                  "description": "",
                  "content": {
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateOrUpdateTickSizeRequest"
                          }
                      },
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateOrUpdateTickSizeRequest"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateOrUpdateTickSizeRequest"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateOrUpdateTickSizeRequest"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Success"
                  },
                  "401": {
                      "description": "Bad Request"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/tick-sizes/{tickSizeId}": {
          "put": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Update tick size by tick size id on Auction Platform (Auth)",
              "parameters": [
                  {
                      "name": "tickSizeId",
                      "in": "path",
                      "description": "",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "requestBody": {
                  "description": "",
                  "content": {
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateOrUpdateTickSizeRequest"
                          }
                      },
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateOrUpdateTickSizeRequest"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateOrUpdateTickSizeRequest"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateOrUpdateTickSizeRequest"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Success"
                  },
                  "401": {
                      "description": "Bad Request"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          },
          "delete": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Delete tick size by tick size id on Auction Platform (Auth)",
              "parameters": [
                  {
                      "name": "tickSizeId",
                      "in": "path",
                      "description": "",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success"
                  },
                  "404": {
                      "description": "Not found"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/bids/{bidId}/release": {
          "put": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Release RECs back to seller by BidId after auction ended (Auth)",
              "parameters": [
                  {
                      "name": "bidId",
                      "in": "path",
                      "description": "",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success"
                  },
                  "404": {
                      "description": "Not found"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/bids/{bidId}/retire": {
          "post": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Send Fee Code and retire RECs for buyers (Auth)",
              "parameters": [
                  {
                      "name": "bidId",
                      "in": "path",
                      "description": "",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "requestBody": {
                  "description": "",
                  "content": {
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateRetirementRequest"
                          }
                      },
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateRetirementRequest"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateRetirementRequest"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateRetirementRequest"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Success"
                  },
                  "404": {
                      "description": "Not found"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/auction-items/{auctionItemId}/release": {
          "put": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Release remaining RECs back to seller in Auction Item after auction ended (Auth)",
              "parameters": [
                  {
                      "name": "auctionItemId",
                      "in": "path",
                      "description": "",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success"
                  },
                  "404": {
                      "description": "Not found"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/auctions/{auctionId}/all-bids": {
          "get": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Get all current bids by auctionId (without calculating won bids) (Auth)",
              "parameters": [
                  {
                      "name": "auctionId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return all current bids"
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/auctions/{auctionId}/token": {
          "get": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Get Client Access Token of this auction for Azure pubsub service (Auth)",
              "parameters": [
                  {
                      "name": "auctionId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return the access URL"
                  },
                  "404": {
                      "description": "If the auctionId is invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/auctions/pubsub/token": {
          "get": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Get Client Access Token for Azure pubsub service - Generic function (Auth)",
              "parameters": [
                  {
                      "name": "page",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "id",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return the access TOKEN"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/auctions/{auctionId}/bidders": {
          "post": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Add additional bidders to an auction (Auth)",
              "parameters": [
                  {
                      "name": "auctionId",
                      "in": "path",
                      "description": "",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "requestBody": {
                  "description": "",
                  "content": {
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/AddBiddersRequest"
                          }
                      },
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/AddBiddersRequest"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/AddBiddersRequest"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/AddBiddersRequest"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Success"
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          },
          "get": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Get list bidders of an auction (Auth)",
              "parameters": [
                  {
                      "name": "auctionId",
                      "in": "path",
                      "description": "",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  },
                  {
                      "name": "OrderBy",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "IsDescending",
                      "in": "query",
                      "schema": {
                          "type": "boolean"
                      }
                  },
                  {
                      "name": "Search",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "CurrentPage",
                      "in": "query",
                      "schema": {
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "name": "Limit",
                      "in": "query",
                      "schema": {
                          "maximum": 100,
                          "minimum": 0,
                          "type": "integer",
                          "format": "int32"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return list pagination bidders of the auction"
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token is invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/auctions/{auctionId}/bidders/{bidderId}": {
          "delete": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Delete a specific bidder, allow to delete when the auction is not happened yet. (Auth)",
              "parameters": [
                  {
                      "name": "auctionId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  },
                  {
                      "name": "bidderId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/BooleanResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/auctions/{auctionId}/bidders/export": {
          "get": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Export all bidders of an auction (Auth)",
              "parameters": [
                  {
                      "name": "auctionId",
                      "in": "path",
                      "description": "",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return all bidders of the auction"
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token is invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/auctions/{auctionId}/won-bids/export": {
          "get": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Export all won bids of an auction (Auth)",
              "parameters": [
                  {
                      "name": "auctionId",
                      "in": "path",
                      "description": "",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return all won bids of the auction"
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token is invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/auctions/{auctionId}/details/images": {
          "post": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": " (Auth)",
              "parameters": [
                  {
                      "name": "auctionId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "multipart/form-data": {
                          "schema": {
                              "required": [
                                  "File",
                                  "Type"
                              ],
                              "type": "object",
                              "properties": {
                                  "File": {
                                      "type": "string",
                                      "format": "binary"
                                  },
                                  "Type": {
                                      "$ref": "#/components/schemas/EntityBlobType"
                                  }
                              }
                          },
                          "encoding": {
                              "File": {
                                  "style": "form"
                              },
                              "Type": {
                                  "style": "form"
                              }
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/BlobResponseResponse"
                              }
                          }
                      }
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/auctions/{auctionId}/details": {
          "put": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": " (Auth)",
              "parameters": [
                  {
                      "name": "auctionId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateAuctionDetailRequest"
                          }
                      },
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateAuctionDetailRequest"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateAuctionDetailRequest"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateAuctionDetailRequest"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/BooleanResponse"
                              }
                          }
                      }
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/auctions/bid-history-logs/{bidId}/export": {
          "get": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Export bid logs history of a bid (Auth)",
              "parameters": [
                  {
                      "name": "bidId",
                      "in": "path",
                      "description": "",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return all bid logs history of a bid"
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token is invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/highest-bid": {
          "get": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Get the highest bid by auctionItemId (Auth)",
              "parameters": [
                  {
                      "name": "auctionItemId",
                      "in": "query",
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return the highest bid of the auction item"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  },
                  "422": {
                      "description": "If the request is invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/auctions/{auctionId}/notification": {
          "post": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Send email to bidder in order to remind them about a new auction (Auth)",
              "parameters": [
                  {
                      "name": "auctionId",
                      "in": "path",
                      "description": "",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success"
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/statistics/quantities": {
          "get": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Get statistic of auction quantity (Auth)",
              "responses": {
                  "200": {
                      "description": "Return the statistic of auction quantity"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  },
                  "422": {
                      "description": "If the request is invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/statistics/auctions": {
          "get": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Get detail statistic of auctions (Auth)",
              "parameters": [
                  {
                      "name": "From",
                      "in": "query",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "format": "date-time"
                      }
                  },
                  {
                      "name": "To",
                      "in": "query",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "format": "date-time"
                      }
                  },
                  {
                      "name": "IsHideZeroBidAuction",
                      "in": "query",
                      "schema": {
                          "type": "boolean"
                      }
                  },
                  {
                      "name": "AuctionStatus",
                      "in": "query",
                      "schema": {
                          "$ref": "#/components/schemas/AuctionStatus"
                      }
                  },
                  {
                      "name": "OrderBy",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "IsDescending",
                      "in": "query",
                      "schema": {
                          "type": "boolean"
                      }
                  },
                  {
                      "name": "Search",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "CurrentPage",
                      "in": "query",
                      "schema": {
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "name": "Limit",
                      "in": "query",
                      "schema": {
                          "maximum": 100,
                          "minimum": 0,
                          "type": "integer",
                          "format": "int32"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return the detail statistic of auction"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  },
                  "422": {
                      "description": "If the request is invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/statistics/auction-bidding-data/export": {
          "get": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Export statistic of auction bidding data (Auth)",
              "parameters": [
                  {
                      "name": "From",
                      "in": "query",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "format": "date-time"
                      }
                  },
                  {
                      "name": "To",
                      "in": "query",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "format": "date-time"
                      }
                  },
                  {
                      "name": "IsHideZeroBidAuction",
                      "in": "query",
                      "schema": {
                          "type": "boolean"
                      }
                  },
                  {
                      "name": "AuctionStatus",
                      "in": "query",
                      "schema": {
                          "$ref": "#/components/schemas/AuctionStatus"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return csv string of the statistic of auction bidding data"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  },
                  "422": {
                      "description": "If the request is invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/statistics/auction-business-accounts/export": {
          "get": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Export statistic of auction business accounts (Auth)",
              "parameters": [
                  {
                      "name": "From",
                      "in": "query",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "format": "date-time"
                      }
                  },
                  {
                      "name": "To",
                      "in": "query",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "format": "date-time"
                      }
                  },
                  {
                      "name": "IsHideZeroBidAuction",
                      "in": "query",
                      "schema": {
                          "type": "boolean"
                      }
                  },
                  {
                      "name": "AuctionStatus",
                      "in": "query",
                      "schema": {
                          "$ref": "#/components/schemas/AuctionStatus"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return csv string of the statistic of auction business accounts"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  },
                  "422": {
                      "description": "If the request is invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/statistics/auctions/refresh": {
          "get": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Refresh statistic of auction (Auth)",
              "responses": {
                  "200": {
                      "description": "Return true"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  },
                  "422": {
                      "description": "If the request is invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/auctions/bids/{bidId}/cancel": {
          "put": {
              "tags": [
                  "AdminAuction"
              ],
              "summary": "Cancel bid (Auth)",
              "parameters": [
                  {
                      "name": "bidId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/CancelBidRequest"
                          }
                      },
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/CancelBidRequest"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/CancelBidRequest"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/CancelBidRequest"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Return true"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  },
                  "422": {
                      "description": "If the request is invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/buy-orders": {
          "get": {
              "tags": [
                  "AdminBuyOrder"
              ],
              "summary": "API Get List of Buy Order with pagination (Auth)",
              "parameters": [
                  {
                      "name": "FuelType",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "Vintage",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "Status",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "OrderBy",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "IsDescending",
                      "in": "query",
                      "schema": {
                          "type": "boolean"
                      }
                  },
                  {
                      "name": "Search",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "CurrentPage",
                      "in": "query",
                      "schema": {
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "name": "Limit",
                      "in": "query",
                      "schema": {
                          "maximum": 100,
                          "minimum": 0,
                          "type": "integer",
                          "format": "int32"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return list of Buy Order with pagination",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/SimpleBuyOrderResultPagedResultResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/buy-orders/{buyOrderId}": {
          "get": {
              "tags": [
                  "AdminBuyOrder"
              ],
              "summary": "API Get a Buy Order by Id (Auth)",
              "parameters": [
                  {
                      "name": "buyOrderId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return true if this action is success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/BooleanResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/buy-orders/export": {
          "get": {
              "tags": [
                  "AdminBuyOrder"
              ],
              "summary": "Export all buy orders history (Auth)",
              "parameters": [
                  {
                      "name": "FuelType",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "Vintage",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "Status",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "Search",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return all buy orders history",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/StringResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token is invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/buy-orders/{buyOrderId}/reject": {
          "put": {
              "tags": [
                  "AdminBuyOrder"
              ],
              "summary": "API Reject Buy Order by Id (Auth)",
              "parameters": [
                  {
                      "name": "buyOrderId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/RejectBuyOrderRequest"
                          }
                      },
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/RejectBuyOrderRequest"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/RejectBuyOrderRequest"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/RejectBuyOrderRequest"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Return true if this action is success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/BooleanResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/buy-orders/{buyOrderId}/approve": {
          "put": {
              "tags": [
                  "AdminBuyOrder"
              ],
              "summary": "API Approve Buy Order by Id (Auth)",
              "parameters": [
                  {
                      "name": "buyOrderId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/ApproveBuyOrderRequest"
                          }
                      },
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/ApproveBuyOrderRequest"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/ApproveBuyOrderRequest"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/ApproveBuyOrderRequest"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Return true if this action is success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/BooleanResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/sell-orders": {
          "get": {
              "tags": [
                  "AdminSellOrder"
              ],
              "summary": "API Get List of Sell Order with pagination (Auth)",
              "parameters": [
                  {
                      "name": "FuelType",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "Vintage",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "Tab",
                      "in": "query",
                      "schema": {
                          "$ref": "#/components/schemas/SellOrderTab"
                      }
                  },
                  {
                      "name": "OrderBy",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "IsDescending",
                      "in": "query",
                      "schema": {
                          "type": "boolean"
                      }
                  },
                  {
                      "name": "Search",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "CurrentPage",
                      "in": "query",
                      "schema": {
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "name": "Limit",
                      "in": "query",
                      "schema": {
                          "maximum": 100,
                          "minimum": 0,
                          "type": "integer",
                          "format": "int32"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return list of Sell Order with pagination",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/SimpleSellOrderResultPagedResultResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          },
          "post": {
              "tags": [
                  "AdminSellOrder"
              ],
              "summary": "API Create a Sell Order (Auth)",
              "requestBody": {
                  "content": {
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateSellOrderRequest"
                          }
                      },
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateSellOrderRequest"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateSellOrderRequest"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateSellOrderRequest"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Return SellOrderId",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Int64Response"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/sell-orders/{sellOrderId}": {
          "put": {
              "tags": [
                  "AdminSellOrder"
              ],
              "summary": "API Update a Sell Order (Auth)",
              "parameters": [
                  {
                      "name": "sellOrderId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateSellOrderRequest"
                          }
                      },
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateSellOrderRequest"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateSellOrderRequest"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateSellOrderRequest"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Return true if update this sell order success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/BooleanResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          },
          "get": {
              "tags": [
                  "AdminSellOrder"
              ],
              "summary": "API Get a Sell Order by Id (Auth)",
              "parameters": [
                  {
                      "name": "sellOrderId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return true if this action is success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/BooleanResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/sell-orders/details/{sellOrderId}": {
          "put": {
              "tags": [
                  "AdminSellOrder"
              ],
              "summary": "API Update a Sell Order Detail (Auth)",
              "parameters": [
                  {
                      "name": "sellOrderId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateSellOrderDetailRequest"
                          }
                      },
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateSellOrderDetailRequest"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateSellOrderDetailRequest"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateSellOrderDetailRequest"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": ">Return true if update this sell order detail success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/BooleanResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/sell-orders/{sellOrderId}/publish": {
          "put": {
              "tags": [
                  "AdminSellOrder"
              ],
              "summary": "API Publish a Sell Order by Id (Auth)",
              "parameters": [
                  {
                      "name": "sellOrderId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return true if this action is success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/BooleanResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/admin/sell-orders/{sellOrderId}/cancel": {
          "delete": {
              "tags": [
                  "AdminSellOrder"
              ],
              "summary": "API Cancel a Sell Order by Id (Auth)",
              "parameters": [
                  {
                      "name": "sellOrderId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return true if this action is success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/BooleanResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/bidder/auctions/{auctionId}/register": {
          "post": {
              "tags": [
                  "BidderAuction"
              ],
              "summary": "Register to join a public auction (Auth)",
              "parameters": [
                  {
                      "name": "auctionId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/RegisterAuctionRequest"
                          }
                      },
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/RegisterAuctionRequest"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/RegisterAuctionRequest"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/RegisterAuctionRequest"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Return message \"Success\" if register successfully"
                  },
                  "400": {
                      "description": "If the request is invalid or insufficient fund"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  },
                  "422": {
                      "description": "If the request has semantic errors"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/bidder/submit-initial-bids": {
          "post": {
              "tags": [
                  "BidderAuction"
              ],
              "summary": "Submit initial bids for an auction, max 3 bids per auction item (Auth)",
              "requestBody": {
                  "content": {
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/SubmitInitialBidRequest"
                          }
                      },
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/SubmitInitialBidRequest"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/SubmitInitialBidRequest"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/SubmitInitialBidRequest"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Return message \"Success\" if submit successfully"
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/bidder/create-bid": {
          "post": {
              "tags": [
                  "BidderAuction"
              ],
              "summary": "Create bid in live auction (Auth)",
              "requestBody": {
                  "content": {
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateBidRequest"
                          }
                      },
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateBidRequest"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateBidRequest"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateBidRequest"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Return message \"Success\" if update successfully"
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/bidder/auctions/bids/{bidId}": {
          "put": {
              "tags": [
                  "BidderAuction"
              ],
              "summary": "Update a specific bid (Auth)",
              "parameters": [
                  {
                      "name": "bidId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateBidAuctionItemRequest"
                          }
                      },
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateBidAuctionItemRequest"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateBidAuctionItemRequest"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateBidAuctionItemRequest"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Return message \"Success\" if create successfully"
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/bidder/highest-bid": {
          "get": {
              "tags": [
                  "BidderAuction"
              ],
              "summary": "Get the highest bid by auctionItemId (Auth)",
              "parameters": [
                  {
                      "name": "auctionItemId",
                      "in": "query",
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return the highest bid of the auction item"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  },
                  "422": {
                      "description": "If the request is invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/bidder/bid-history-logs/{bidId}": {
          "get": {
              "tags": [
                  "BidderAuction"
              ],
              "summary": " (Auth)",
              "parameters": [
                  {
                      "name": "bidId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/bidder/auctions/{auctionId}/my-bids": {
          "get": {
              "tags": [
                  "BidderAuction"
              ],
              "summary": "Get all bids of a user by auctionId (Auth)",
              "parameters": [
                  {
                      "name": "auctionId",
                      "in": "path",
                      "description": "",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return all my bids of an auctionId"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/data/countries": {
          "get": {
              "tags": [
                  "Data"
              ],
              "summary": "Get all country info (country name and code) that the system support (Auth)",
              "responses": {
                  "200": {
                      "description": "Return the list of country info"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/data/energy-types": {
          "get": {
              "tags": [
                  "Data"
              ],
              "summary": "Get all energy types that the system support (Auth)",
              "responses": {
                  "200": {
                      "description": "Return the list of energy types"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/data/users": {
          "get": {
              "tags": [
                  "Data"
              ],
              "summary": "Get all users (Auth)",
              "parameters": [
                  {
                      "name": "OrderBy",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "IsDescending",
                      "in": "query",
                      "schema": {
                          "type": "boolean"
                      }
                  },
                  {
                      "name": "Search",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "CurrentPage",
                      "in": "query",
                      "schema": {
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "name": "Limit",
                      "in": "query",
                      "schema": {
                          "maximum": 100,
                          "minimum": 0,
                          "type": "integer",
                          "format": "int32"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return the list of users from REHash"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/data/tick-sizes": {
          "get": {
              "tags": [
                  "Data"
              ],
              "summary": "Get minimum tick size (Auth)",
              "responses": {
                  "200": {
                      "description": "Return value"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/data/provinces/{countryCode}": {
          "get": {
              "tags": [
                  "Data"
              ],
              "summary": "Get province by country code (Auth)",
              "parameters": [
                  {
                      "name": "countryCode",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return the list of province info of this country"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/data/business-types": {
          "get": {
              "tags": [
                  "Data"
              ],
              "summary": "Get province by country code (Auth)",
              "responses": {
                  "200": {
                      "description": "Return the list of province info of this country"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/files/{entityId}": {
          "post": {
              "tags": [
                  "Files"
              ],
              "summary": " (Auth)",
              "parameters": [
                  {
                      "name": "entityId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "multipart/form-data": {
                          "schema": {
                              "required": [
                                  "File",
                                  "Type"
                              ],
                              "type": "object",
                              "properties": {
                                  "File": {
                                      "type": "string",
                                      "format": "binary"
                                  },
                                  "Type": {
                                      "$ref": "#/components/schemas/EntityBlobType"
                                  }
                              }
                          },
                          "encoding": {
                              "File": {
                                  "style": "form"
                              },
                              "Type": {
                                  "style": "form"
                              }
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/BlobResponseResponse"
                              }
                          }
                      }
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/files/images/{entityId}": {
          "post": {
              "tags": [
                  "Files"
              ],
              "summary": " (Auth)",
              "parameters": [
                  {
                      "name": "entityId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "multipart/form-data": {
                          "schema": {
                              "required": [
                                  "File",
                                  "Type"
                              ],
                              "type": "object",
                              "properties": {
                                  "File": {
                                      "type": "string",
                                      "format": "binary"
                                  },
                                  "Type": {
                                      "$ref": "#/components/schemas/EntityBlobType"
                                  }
                              }
                          },
                          "encoding": {
                              "File": {
                                  "style": "form"
                              },
                              "Type": {
                                  "style": "form"
                              }
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/BlobResponseResponse"
                              }
                          }
                      }
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/profile": {
          "get": {
              "tags": [
                  "Profile"
              ],
              "summary": "Get user profile (Auth)",
              "responses": {
                  "200": {
                      "description": "Returns the account token and profile"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/seller/auctions/{auctionId}/available-items": {
          "get": {
              "tags": [
                  "SellerAuction"
              ],
              "summary": "Get available REC items (Auth)",
              "parameters": [
                  {
                      "name": "auctionId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return all of rec item available group by country, fuel type, vintage"
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/seller/auctions/{auctionId}/items": {
          "post": {
              "tags": [
                  "SellerAuction"
              ],
              "summary": "Add auction items (RECs that seller want to sell) (Auth)",
              "parameters": [
                  {
                      "name": "auctionId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateAuctionItemsRequest"
                          }
                      },
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateAuctionItemsRequest"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateAuctionItemsRequest"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateAuctionItemsRequest"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Return Success"
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/seller/auctions/{auctionId}/items/{auctionItemId}": {
          "delete": {
              "tags": [
                  "SellerAuction"
              ],
              "summary": "Delete a specific auction item request (Auth)",
              "parameters": [
                  {
                      "name": "auctionId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  },
                  {
                      "name": "auctionItemId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return Success"
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/seller/tick-sizes/get-by-params": {
          "get": {
              "tags": [
                  "SellerAuction"
              ],
              "summary": "Get tick size by country name and fuel type on Auction Platform (Auth)",
              "parameters": [
                  {
                      "name": "country",
                      "in": "query",
                      "description": "",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "fuelType",
                      "in": "query",
                      "description": "",
                      "schema": {
                          "type": "string"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Success"
                  },
                  "401": {
                      "description": "Bad Request"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/templates/content": {
          "get": {
              "tags": [
                  "Templates"
              ],
              "summary": "Get template content by template type",
              "parameters": [
                  {
                      "name": "templateType",
                      "in": "query",
                      "schema": {
                          "$ref": "#/components/schemas/TemplateType"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return template content"
                  }
              }
          }
      },
      "/templates/{templateId}": {
          "put": {
              "tags": [
                  "Templates"
              ],
              "summary": "Update template content content (Auth)",
              "parameters": [
                  {
                      "name": "templateId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateTemplateContentRequest"
                          }
                      },
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateTemplateContentRequest"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateTemplateContentRequest"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateTemplateContentRequest"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Return true"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          },
          "get": {
              "tags": [
                  "Templates"
              ],
              "summary": "Get template type by id (Auth)",
              "parameters": [
                  {
                      "name": "templateId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return template",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/TemplateTypeResultResponse"
                              }
                          }
                      }
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/templates": {
          "get": {
              "tags": [
                  "Templates"
              ],
              "summary": "Get list of templates (Auth)",
              "parameters": [
                  {
                      "name": "OrderBy",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "IsDescending",
                      "in": "query",
                      "schema": {
                          "type": "boolean"
                      }
                  },
                  {
                      "name": "Search",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "CurrentPage",
                      "in": "query",
                      "schema": {
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "name": "Limit",
                      "in": "query",
                      "schema": {
                          "maximum": 100,
                          "minimum": 0,
                          "type": "integer",
                          "format": "int32"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return list of templates",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/TemplateResultForGetListPagedResultResponse"
                              }
                          }
                      }
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          },
          "post": {
              "tags": [
                  "Templates"
              ],
              "summary": "Create new template (Auth)",
              "requestBody": {
                  "content": {
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateTemplateRequest"
                          }
                      },
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateTemplateRequest"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateTemplateRequest"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateTemplateRequest"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Return id of new template",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Int64Response"
                              }
                          }
                      }
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/templates/template-types": {
          "get": {
              "tags": [
                  "Templates"
              ],
              "summary": "Get list of template types (Auth)",
              "responses": {
                  "200": {
                      "description": "Return list of template types",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/TemplateTypeResultResponse"
                              }
                          }
                      }
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/templates/upload": {
          "post": {
              "tags": [
                  "Templates"
              ],
              "summary": "Upload template file (Auth)",
              "requestBody": {
                  "content": {
                      "multipart/form-data": {
                          "schema": {
                              "required": [
                                  "File"
                              ],
                              "type": "object",
                              "properties": {
                                  "File": {
                                      "type": "string",
                                      "format": "binary"
                                  }
                              }
                          },
                          "encoding": {
                              "File": {
                                  "style": "form"
                              }
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Return list of templates",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/BlobResponseResponse"
                              }
                          }
                      }
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/user/accounts": {
          "get": {
              "tags": [
                  "UserAccount"
              ],
              "summary": "Get list of User accounts (Auth)",
              "responses": {
                  "200": {
                      "description": "Return List of User account",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/SimpleReHashAccountResponseIEnumerableResponse"
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "If the access token is invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/user/accounts/account-registrations": {
          "post": {
              "tags": [
                  "UserAccount"
              ],
              "summary": "Create an Auction account registration (Auth)",
              "requestBody": {
                  "content": {
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateAccountRegistrationRequest"
                          }
                      },
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateAccountRegistrationRequest"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateAccountRegistrationRequest"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateAccountRegistrationRequest"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Return RegistrationId",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Int64Response"
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "If the access token is invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          },
          "get": {
              "tags": [
                  "UserAccount"
              ],
              "summary": "Create an Auction account registration (Auth)",
              "responses": {
                  "200": {
                      "description": "Return RegistrationId",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/AccountRegistrationResultResponse"
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "If the access token is invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/user/accounts/profile/{businessAccountId}": {
          "get": {
              "tags": [
                  "UserAccount"
              ],
              "summary": "Get User Account profile (Auth)",
              "parameters": [
                  {
                      "name": "businessAccountId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return User account profile",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/AccountResultResponse"
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "If the access token is invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          },
          "put": {
              "tags": [
                  "UserAccount"
              ],
              "summary": "Update User Account profile (Auth)",
              "parameters": [
                  {
                      "name": "businessAccountId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "string",
                          "format": "uuid"
                      }
                  }
              ],
              "requestBody": {
                  "content": {
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateCompanyInfoRequest"
                          }
                      },
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateCompanyInfoRequest"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateCompanyInfoRequest"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/UpdateCompanyInfoRequest"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Return true",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/BooleanResponse"
                              }
                          }
                      }
                  },
                  "401": {
                      "description": "If the access token is invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/user/auctions": {
          "get": {
              "tags": [
                  "UserAuction"
              ],
              "summary": "Get list of auctions based on the filter (Auth)",
              "parameters": [
                  {
                      "name": "request",
                      "in": "query",
                      "schema": {
                          "$ref": "#/components/schemas/AuctionFilterRequest"
                      }
                  },
                  {
                      "name": "OrderBy",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "IsDescending",
                      "in": "query",
                      "schema": {
                          "type": "boolean"
                      }
                  },
                  {
                      "name": "Search",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "CurrentPage",
                      "in": "query",
                      "schema": {
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "name": "Limit",
                      "in": "query",
                      "schema": {
                          "maximum": 100,
                          "minimum": 0,
                          "type": "integer",
                          "format": "int32"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return list of auctions based on the filter"
                  },
                  "401": {
                      "description": "If the access token is invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/user/auctions/{auctionId}": {
          "get": {
              "tags": [
                  "UserAuction"
              ],
              "summary": "Get auction detail by auctionId. (Auth)",
              "parameters": [
                  {
                      "name": "auctionId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Auction detail with all auction items"
                  },
                  "401": {
                      "description": "If the access token is invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/user/all-bids-result/auction-items/{auctionItemId}": {
          "get": {
              "tags": [
                  "UserAuction"
              ],
              "summary": "Get all bids result by auctionId for auction owner (include won bids and lost bids) (Auth)",
              "parameters": [
                  {
                      "name": "auctionItemId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  },
                  {
                      "name": "OrderBy",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "IsDescending",
                      "in": "query",
                      "schema": {
                          "type": "boolean"
                      }
                  },
                  {
                      "name": "Search",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "CurrentPage",
                      "in": "query",
                      "schema": {
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "name": "Limit",
                      "in": "query",
                      "schema": {
                          "maximum": 100,
                          "minimum": 0,
                          "type": "integer",
                          "format": "int32"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return all bids result of the auction"
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/user/get-won-bids/auction-items/{auctionItemId}": {
          "get": {
              "tags": [
                  "UserAuction"
              ],
              "summary": "Get all won bids by auctionId (for bidders) (Auth)",
              "parameters": [
                  {
                      "name": "auctionItemId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  },
                  {
                      "name": "OrderBy",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "IsDescending",
                      "in": "query",
                      "schema": {
                          "type": "boolean"
                      }
                  },
                  {
                      "name": "Search",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "CurrentPage",
                      "in": "query",
                      "schema": {
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "name": "Limit",
                      "in": "query",
                      "schema": {
                          "maximum": 100,
                          "minimum": 0,
                          "type": "integer",
                          "format": "int32"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return all bids for an auctionId"
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/user/auctions/{auctionId}/all-bids": {
          "get": {
              "tags": [
                  "UserAuction"
              ],
              "summary": "Get all bids by auctionId (without calculating won bids) - New API (Auth)",
              "parameters": [
                  {
                      "name": "auctionId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return all current bids"
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/user/auctions/{auctionId}/token": {
          "get": {
              "tags": [
                  "UserAuction"
              ],
              "summary": "Get Client Access token of this auction for Azure pub sub service (Auth)",
              "parameters": [
                  {
                      "name": "auctionId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return the access URL"
                  },
                  "404": {
                      "description": "If the auctionId is invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/user/auctions/pubsub/token": {
          "get": {
              "tags": [
                  "UserAuction"
              ],
              "summary": "Get Client Access TOKEN of this auction for Azure pubsub service (Auth)",
              "parameters": [
                  {
                      "name": "page",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "id",
                      "in": "query",
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return the access TOKEN"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/user/buy-orders": {
          "get": {
              "tags": [
                  "UserBuyOrder"
              ],
              "summary": "API Get List of Buy Order with pagination (Auth)",
              "parameters": [
                  {
                      "name": "FuelType",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "Vintage",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "Status",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "OrderBy",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "IsDescending",
                      "in": "query",
                      "schema": {
                          "type": "boolean"
                      }
                  },
                  {
                      "name": "Search",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "CurrentPage",
                      "in": "query",
                      "schema": {
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "name": "Limit",
                      "in": "query",
                      "schema": {
                          "maximum": 100,
                          "minimum": 0,
                          "type": "integer",
                          "format": "int32"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return list of Buy Order with pagination",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/SimpleBuyOrderResultPagedResultResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          },
          "post": {
              "tags": [
                  "UserBuyOrder"
              ],
              "summary": "API Create a Buy Order (Auth)",
              "requestBody": {
                  "content": {
                      "application/json-patch+json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateBuyOrderRequest"
                          }
                      },
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateBuyOrderRequest"
                          }
                      },
                      "text/json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateBuyOrderRequest"
                          }
                      },
                      "application/*+json": {
                          "schema": {
                              "$ref": "#/components/schemas/CreateBuyOrderRequest"
                          }
                      }
                  }
              },
              "responses": {
                  "200": {
                      "description": "Return new buy order id if this action is success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/Int64Response"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/user/buy-orders/{buyOrderId}": {
          "get": {
              "tags": [
                  "UserBuyOrder"
              ],
              "summary": "API Get a Buy Order by Id (Auth)",
              "parameters": [
                  {
                      "name": "buyOrderId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return true if this action is success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/BooleanResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/user/sell-orders": {
          "get": {
              "tags": [
                  "UserSellOrder"
              ],
              "summary": "API Get List of Sell Order with pagination (Auth)",
              "parameters": [
                  {
                      "name": "FuelType",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "Vintage",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "Tab",
                      "in": "query",
                      "schema": {
                          "$ref": "#/components/schemas/SellOrderTab"
                      }
                  },
                  {
                      "name": "OrderBy",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "IsDescending",
                      "in": "query",
                      "schema": {
                          "type": "boolean"
                      }
                  },
                  {
                      "name": "Search",
                      "in": "query",
                      "schema": {
                          "type": "string"
                      }
                  },
                  {
                      "name": "CurrentPage",
                      "in": "query",
                      "schema": {
                          "type": "integer",
                          "format": "int32"
                      }
                  },
                  {
                      "name": "Limit",
                      "in": "query",
                      "schema": {
                          "maximum": 100,
                          "minimum": 0,
                          "type": "integer",
                          "format": "int32"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return list of Sell Order with pagination",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/SimpleSellOrderResultPagedResultResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      },
      "/user/sell-orders/{sellOrderId}": {
          "get": {
              "tags": [
                  "UserSellOrder"
              ],
              "summary": "API Get a Sell Order by Id (Auth)",
              "parameters": [
                  {
                      "name": "sellOrderId",
                      "in": "path",
                      "required": true,
                      "schema": {
                          "type": "integer",
                          "format": "int64"
                      }
                  }
              ],
              "responses": {
                  "200": {
                      "description": "Return true if this action is success",
                      "content": {
                          "application/json": {
                              "schema": {
                                  "$ref": "#/components/schemas/BooleanResponse"
                              }
                          }
                      }
                  },
                  "400": {
                      "description": "If the request is invalid"
                  },
                  "401": {
                      "description": "If the access token invalid"
                  }
              },
              "security": [
                  {
                      "Bearer": []
                  }
              ]
          }
      }
  },
  "components": {
      "schemas": {
          "AccountRegistrationResult": {
              "type": "object",
              "properties": {
                  "accountRegistrationId": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "companyName": {
                      "type": "string",
                      "nullable": true
                  },
                  "companyRegistrationNumber": {
                      "type": "string",
                      "nullable": true
                  },
                  "countryCode": {
                      "type": "string",
                      "nullable": true
                  },
                  "countryName": {
                      "type": "string",
                      "nullable": true
                  },
                  "provinceCode": {
                      "type": "string",
                      "nullable": true
                  },
                  "provinceName": {
                      "type": "string",
                      "nullable": true
                  },
                  "contactNumber": {
                      "type": "string",
                      "nullable": true
                  },
                  "phoneCode": {
                      "type": "string",
                      "nullable": true
                  },
                  "companyAddress": {
                      "type": "string",
                      "nullable": true
                  },
                  "status": {
                      "type": "string",
                      "nullable": true
                  },
                  "username": {
                      "type": "string",
                      "nullable": true
                  },
                  "email": {
                      "type": "string",
                      "nullable": true
                  },
                  "maxRecBidQuantity": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "companyBusinessAddress": {
                      "type": "string",
                      "nullable": true
                  },
                  "companyPICName": {
                      "type": "string",
                      "nullable": true
                  },
                  "companyPICEmail": {
                      "type": "string",
                      "nullable": true
                  },
                  "companySSTRegistrationNumber": {
                      "type": "string",
                      "nullable": true
                  },
                  "tnbCaNumber": {
                      "type": "string",
                      "nullable": true
                  },
                  "confirmInformationIsTrue": {
                      "type": "boolean"
                  },
                  "confirmProvidePersonalData": {
                      "type": "boolean"
                  },
                  "confirmUpToDateDataToTNBX": {
                      "type": "boolean"
                  },
                  "confirmHaveAuthorization": {
                      "type": "boolean"
                  },
                  "businessType": {
                      "type": "string",
                      "nullable": true
                  },
                  "otherBusinessType": {
                      "type": "string",
                      "nullable": true
                  },
                  "englishCompanyName": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "AccountRegistrationResultResponse": {
              "type": "object",
              "properties": {
                  "data": {
                      "$ref": "#/components/schemas/AccountRegistrationResult"
                  },
                  "statusCode": {
                      "$ref": "#/components/schemas/HttpStatusCode"
                  },
                  "code": {
                      "type": "string",
                      "nullable": true
                  },
                  "message": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "AccountRegistrationStatus": {
              "enum": [
                  "All",
                  "New",
                  "Approved",
                  "Returned",
                  "Rejected"
              ],
              "type": "string"
          },
          "AccountResult": {
              "type": "object",
              "properties": {
                  "accountId": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "accountRegistrationId": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "username": {
                      "type": "string",
                      "nullable": true
                  },
                  "email": {
                      "type": "string",
                      "nullable": true
                  },
                  "companyName": {
                      "type": "string",
                      "nullable": true
                  },
                  "companyRegistrationNumber": {
                      "type": "string",
                      "nullable": true
                  },
                  "countryCode": {
                      "type": "string",
                      "nullable": true
                  },
                  "countryName": {
                      "type": "string",
                      "nullable": true
                  },
                  "provinceCode": {
                      "type": "string",
                      "nullable": true
                  },
                  "provinceName": {
                      "type": "string",
                      "nullable": true
                  },
                  "contactEmail": {
                      "type": "string",
                      "nullable": true
                  },
                  "contactNumber": {
                      "type": "string",
                      "nullable": true
                  },
                  "phoneCode": {
                      "type": "string",
                      "nullable": true
                  },
                  "companyAddress": {
                      "type": "string",
                      "nullable": true
                  },
                  "maxRecBidQuantity": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "companyBusinessAddress": {
                      "type": "string",
                      "nullable": true
                  },
                  "companyPICName": {
                      "type": "string",
                      "nullable": true
                  },
                  "companyPICEmail": {
                      "type": "string",
                      "nullable": true
                  },
                  "companySSTRegistrationNumber": {
                      "type": "string",
                      "nullable": true
                  },
                  "tnbCaNumber": {
                      "type": "string",
                      "nullable": true
                  },
                  "referenceId": {
                      "type": "string",
                      "format": "uuid"
                  },
                  "businessType": {
                      "type": "string",
                      "nullable": true
                  },
                  "otherBusinessType": {
                      "type": "string",
                      "nullable": true
                  },
                  "englishCompanyName": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "AccountResultResponse": {
              "type": "object",
              "properties": {
                  "data": {
                      "$ref": "#/components/schemas/AccountResult"
                  },
                  "statusCode": {
                      "$ref": "#/components/schemas/HttpStatusCode"
                  },
                  "code": {
                      "type": "string",
                      "nullable": true
                  },
                  "message": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "AddBiddersRequest": {
              "required": [
                  "buyers"
              ],
              "type": "object",
              "properties": {
                  "buyers": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/CreateBidderRequest"
                      }
                  }
              },
              "additionalProperties": false
          },
          "AddBidRequest": {
              "type": "object",
              "properties": {
                  "bidRECQuantity": {
                      "maximum": 100000000,
                      "minimum": 1,
                      "type": "integer",
                      "format": "int32"
                  },
                  "bidValue": {
                      "minimum": 0.01,
                      "type": "number",
                      "format": "double"
                  }
              },
              "additionalProperties": false
          },
          "ApproveBuyOrderRequest": {
              "required": [
                  "remark"
              ],
              "type": "object",
              "properties": {
                  "remark": {
                      "maxLength": 1000,
                      "minLength": 0,
                      "type": "string",
                      "description": "Remark of the approve sell order",
                      "example": "this is a remark"
                  }
              },
              "additionalProperties": false
          },
          "AuctionFilterRequest": {
              "enum": [
                  "Upcoming",
                  "Past",
                  "All"
              ],
              "type": "string"
          },
          "AuctionIdResult": {
              "type": "object",
              "properties": {
                  "auctionId": {
                      "type": "integer",
                      "format": "int64"
                  }
              },
              "additionalProperties": false
          },
          "AuctionIdResultResponse": {
              "type": "object",
              "properties": {
                  "data": {
                      "$ref": "#/components/schemas/AuctionIdResult"
                  },
                  "statusCode": {
                      "$ref": "#/components/schemas/HttpStatusCode"
                  },
                  "code": {
                      "type": "string",
                      "nullable": true
                  },
                  "message": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "AuctionItemResult": {
              "required": [
                  "recCountry",
                  "recFuelType"
              ],
              "type": "object",
              "properties": {
                  "auctionItemId": {
                      "type": "integer",
                      "description": "Id of this auction item",
                      "format": "int64",
                      "example": 1
                  },
                  "referenceAuctionId": {
                      "type": "string",
                      "description": "Reference Auction Id of this auction",
                      "format": "uuid"
                  },
                  "referenceAuctionItemId": {
                      "type": "string",
                      "description": "Reference Auction Item Id of this auction",
                      "format": "uuid"
                  },
                  "createdTime": {
                      "type": "string",
                      "description": "Time when this auction item has been created",
                      "format": "date-time",
                      "example": "2021-08-15T10:00:00"
                  },
                  "remainingRecQuantity": {
                      "type": "integer",
                      "format": "int32"
                  },
                  "isReleased": {
                      "type": "boolean"
                  },
                  "numberOfBids": {
                      "type": "integer",
                      "format": "int32"
                  },
                  "highestPrice": {
                      "type": "number",
                      "format": "float"
                  },
                  "lowestPrice": {
                      "type": "number",
                      "format": "float"
                  },
                  "totalWonRECQuantity": {
                      "type": "integer",
                      "format": "int32"
                  },
                  "actualRemainingRECQuantity": {
                      "type": "integer",
                      "format": "int32"
                  },
                  "auctionId": {
                      "type": "integer",
                      "description": "AuctionId is the result of API create-auction, one auction may contain multiple auction items",
                      "format": "int64",
                      "example": 8
                  },
                  "recCountry": {
                      "maxLength": 2,
                      "minLength": 0,
                      "type": "string",
                      "description": "Country of these RECs that seller want to sell",
                      "example": "SG"
                  },
                  "recCountryName": {
                      "type": "string",
                      "description": "Country of these RECs that seller want to sell",
                      "nullable": true,
                      "example": "Singapore"
                  },
                  "recFuelType": {
                      "type": "string",
                      "description": "FuelType of these RECs that seller want to sell",
                      "example": "Solar"
                  },
                  "recVintage": {
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "description": "Vintage of these RECs that seller want to sell (year), if the auction is not Spot RECs (Contract REC), set Vintage = 0",
                      "format": "int32",
                      "example": 2021
                  },
                  "recQuantity": {
                      "maximum": 100000000,
                      "minimum": 1,
                      "type": "integer",
                      "description": "Quantity of RECs that seller want to sell",
                      "format": "int32",
                      "example": 20000
                  },
                  "minimumBidPrice": {
                      "minimum": 0,
                      "type": "number",
                      "description": "Lowest price that owner want to sell (per REC)",
                      "format": "double",
                      "example": 0.2
                  },
                  "maximumBidPrice": {
                      "maximum": 9999999.99,
                      "minimum": 0,
                      "type": "number",
                      "description": "Highest price that owner want to buy (per REC)",
                      "format": "double",
                      "example": 12
                  },
                  "partialFulfillment": {
                      "type": "boolean",
                      "description": "True: allow partial fill, False: not allowed partial fill"
                  },
                  "tickSize": {
                      "type": "number",
                      "description": "Tick size of this auction item",
                      "format": "double",
                      "example": 0.1
                  }
              },
              "additionalProperties": false
          },
          "AuctionItemResultIEnumerableResponse": {
              "type": "object",
              "properties": {
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/AuctionItemResult"
                      },
                      "nullable": true
                  },
                  "statusCode": {
                      "$ref": "#/components/schemas/HttpStatusCode"
                  },
                  "code": {
                      "type": "string",
                      "nullable": true
                  },
                  "message": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "AuctionResult": {
              "type": "object",
              "properties": {
                  "auctionId": {
                      "type": "integer",
                      "description": "AuctionId, it's unique in the system",
                      "format": "int64",
                      "example": 123
                  },
                  "referenceAuctionId": {
                      "type": "string",
                      "description": "Reference Auction Id of this auction",
                      "format": "uuid"
                  },
                  "auctionTitle": {
                      "type": "string",
                      "description": "Title of the auction",
                      "nullable": true,
                      "example": "Singapore RECs"
                  },
                  "auctionDateTime": {
                      "type": "string",
                      "description": "Datetime that start the auction, it's UTC time",
                      "format": "date-time",
                      "example": "2021-09-01T08:30:00.0000000"
                  },
                  "auctionEndTime": {
                      "type": "string",
                      "description": "Datetime that end the auction, it's UTC time",
                      "format": "date-time",
                      "example": "2022-09-01T08:30:00.0000000"
                  },
                  "minimumBiddingRECQuantity": {
                      "type": "integer",
                      "description": "Bidders cannot bid lower than this quantity",
                      "format": "int32",
                      "example": 1000
                  },
                  "minimumRECQuantity": {
                      "type": "integer",
                      "description": "Auction Item quantity cannot be lower than this",
                      "format": "int32",
                      "example": 1000
                  },
                  "sellerDepositRequirement": {
                      "type": "integer",
                      "description": "Seller need to deposit minimum this amount (in USD)",
                      "format": "int32",
                      "example": 2000
                  },
                  "buyerDepositRequirement": {
                      "type": "integer",
                      "description": "Buyers need to deposit minimum this amount (in USD)",
                      "format": "int32",
                      "example": 2000
                  },
                  "sellerId": {
                      "type": "integer",
                      "description": "SellerId who sell RECs for this auction",
                      "format": "int64",
                      "example": 2
                  },
                  "updatedTime": {
                      "type": "string",
                      "description": "Updated time of this auction, it's UTC time",
                      "format": "date-time",
                      "example": "2021-09-01T08:30:00"
                  },
                  "auctionItems": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/AuctionItemResult"
                      },
                      "nullable": true
                  },
                  "registered": {
                      "type": "boolean"
                  },
                  "isOwner": {
                      "type": "boolean"
                  },
                  "sellerProcessingFee": {
                      "type": "number",
                      "format": "double"
                  },
                  "buyerProcessingFee": {
                      "type": "number",
                      "format": "double"
                  },
                  "isSpotRecs": {
                      "type": "boolean"
                  },
                  "isPublic": {
                      "type": "boolean"
                  },
                  "sellerUserName": {
                      "type": "string",
                      "nullable": true
                  },
                  "sellerBusinessAccountId": {
                      "type": "string",
                      "format": "uuid"
                  },
                  "sellerBusinessAccountName": {
                      "type": "string",
                      "nullable": true
                  },
                  "currencyCode": {
                      "type": "string",
                      "nullable": true
                  },
                  "allowSellerEdit": {
                      "type": "boolean"
                  },
                  "bidMaxRecQuantity": {
                      "type": "integer",
                      "format": "int32"
                  },
                  "description": {
                      "type": "string",
                      "nullable": true
                  },
                  "longitude": {
                      "type": "number",
                      "format": "double",
                      "nullable": true
                  },
                  "latitude": {
                      "type": "number",
                      "format": "double",
                      "nullable": true
                  },
                  "address": {
                      "type": "string",
                      "nullable": true
                  },
                  "images": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/BlobResponse"
                      },
                      "nullable": true
                  },
                  "status": {
                      "type": "string",
                      "nullable": true
                  },
                  "lastSentAuctionMailBy": {
                      "type": "string",
                      "nullable": true
                  },
                  "lastSentAuctionMailAt": {
                      "type": "string",
                      "format": "date-time"
                  },
                  "auctionType": {
                      "$ref": "#/components/schemas/AuctionType"
                  },
                  "hasBid": {
                      "type": "boolean"
                  }
              },
              "additionalProperties": false
          },
          "AuctionResultResponse": {
              "type": "object",
              "properties": {
                  "data": {
                      "$ref": "#/components/schemas/AuctionResult"
                  },
                  "statusCode": {
                      "$ref": "#/components/schemas/HttpStatusCode"
                  },
                  "code": {
                      "type": "string",
                      "nullable": true
                  },
                  "message": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "AuctionStatus": {
              "enum": [
                  "CalculatingWonBids",
                  "Ended",
                  "NeedRecalculateWonBids",
                  "Live",
                  "Upcoming"
              ],
              "type": "string"
          },
          "AuctionType": {
              "enum": [
                  "Forward",
                  "Reverse"
              ],
              "type": "string"
          },
          "BidLogResult": {
              "type": "object",
              "properties": {
                  "bidLogId": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "bidId": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "bidValue": {
                      "type": "number",
                      "format": "double"
                  },
                  "bidRECQuantity": {
                      "type": "integer",
                      "format": "int32"
                  },
                  "createdTime": {
                      "type": "string",
                      "format": "date-time"
                  },
                  "isOverwriteByAdmin": {
                      "type": "boolean"
                  },
                  "bidderBusinessAccountName": {
                      "type": "string",
                      "nullable": true
                  },
                  "bidderUserName": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "BidLogResultIEnumerableResponse": {
              "type": "object",
              "properties": {
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/BidLogResult"
                      },
                      "nullable": true
                  },
                  "statusCode": {
                      "$ref": "#/components/schemas/HttpStatusCode"
                  },
                  "code": {
                      "type": "string",
                      "nullable": true
                  },
                  "message": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "BidResult": {
              "type": "object",
              "properties": {
                  "bidderEmail": {
                      "type": "string",
                      "nullable": true
                  },
                  "bidderBusinessAccountId": {
                      "type": "string",
                      "format": "uuid"
                  },
                  "bidderBusinessAccountName": {
                      "type": "string",
                      "nullable": true
                  },
                  "referenceAuctionItemId": {
                      "type": "string",
                      "format": "uuid"
                  },
                  "bidTransactionType": {
                      "type": "string",
                      "nullable": true
                  },
                  "retirementReason": {
                      "type": "string",
                      "nullable": true
                  },
                  "bidderCompanyRegistrationNumber": {
                      "type": "string",
                      "nullable": true
                  },
                  "bidderBusinessAccountAddress": {
                      "type": "string",
                      "nullable": true
                  },
                  "bidderBusinessContactNumber": {
                      "type": "string",
                      "nullable": true
                  },
                  "bidderPhoneCode": {
                      "type": "string",
                      "nullable": true
                  },
                  "bidderUserName": {
                      "type": "string",
                      "nullable": true
                  },
                  "bidderCountryCode": {
                      "type": "string",
                      "nullable": true
                  },
                  "picFullName": {
                      "type": "string",
                      "nullable": true
                  },
                  "recCountry": {
                      "type": "string",
                      "nullable": true
                  },
                  "recFuelType": {
                      "type": "string",
                      "nullable": true
                  },
                  "recVintage": {
                      "type": "string",
                      "nullable": true
                  },
                  "bidId": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "auctionItemId": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "bidderId": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "bidValue": {
                      "type": "number",
                      "format": "double"
                  },
                  "bidRECQuantity": {
                      "type": "integer",
                      "format": "int32"
                  },
                  "createdTime": {
                      "type": "string",
                      "format": "date-time"
                  },
                  "updatedTime": {
                      "type": "string",
                      "format": "date-time"
                  },
                  "isWonBid": {
                      "type": "boolean"
                  },
                  "isOwnBid": {
                      "type": "boolean"
                  },
                  "actualWonRECQuantity": {
                      "type": "integer",
                      "format": "int32"
                  },
                  "bidderPartialFulfillment": {
                      "type": "boolean"
                  },
                  "remark": {
                      "type": "string",
                      "nullable": true
                  },
                  "isDeleted": {
                      "type": "boolean"
                  }
              },
              "additionalProperties": false
          },
          "BidResultPagedResult": {
              "type": "object",
              "properties": {
                  "paging": {
                      "$ref": "#/components/schemas/Paging"
                  },
                  "records": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/BidResult"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "BidResultPagedResultResponse": {
              "type": "object",
              "properties": {
                  "data": {
                      "$ref": "#/components/schemas/BidResultPagedResult"
                  },
                  "statusCode": {
                      "$ref": "#/components/schemas/HttpStatusCode"
                  },
                  "code": {
                      "type": "string",
                      "nullable": true
                  },
                  "message": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "BlobResponse": {
              "type": "object",
              "properties": {
                  "id": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "name": {
                      "type": "string",
                      "nullable": true
                  },
                  "content": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "BlobResponseResponse": {
              "type": "object",
              "properties": {
                  "data": {
                      "$ref": "#/components/schemas/BlobResponse"
                  },
                  "statusCode": {
                      "$ref": "#/components/schemas/HttpStatusCode"
                  },
                  "code": {
                      "type": "string",
                      "nullable": true
                  },
                  "message": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "BooleanResponse": {
              "type": "object",
              "properties": {
                  "data": {
                      "type": "boolean"
                  },
                  "statusCode": {
                      "$ref": "#/components/schemas/HttpStatusCode"
                  },
                  "code": {
                      "type": "string",
                      "nullable": true
                  },
                  "message": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "BusinessAccountInformationResult": {
              "type": "object",
              "properties": {
                  "companySSTRegistrationNumber": {
                      "type": "string",
                      "nullable": true
                  },
                  "tnbCaNumber": {
                      "type": "string",
                      "nullable": true
                  },
                  "businessType": {
                      "type": "string",
                      "nullable": true
                  },
                  "otherBusinessType": {
                      "type": "string",
                      "nullable": true
                  },
                  "username": {
                      "type": "string",
                      "nullable": true
                  },
                  "email": {
                      "type": "string",
                      "nullable": true
                  },
                  "companyPICName": {
                      "type": "string",
                      "nullable": true
                  },
                  "companyPICEmail": {
                      "type": "string",
                      "nullable": true
                  },
                  "companyName": {
                      "type": "string",
                      "nullable": true
                  },
                  "companyRegistrationNumber": {
                      "type": "string",
                      "nullable": true
                  },
                  "countryCode": {
                      "type": "string",
                      "nullable": true
                  },
                  "countryName": {
                      "type": "string",
                      "nullable": true
                  },
                  "provinceCode": {
                      "type": "string",
                      "nullable": true
                  },
                  "provinceName": {
                      "type": "string",
                      "nullable": true
                  },
                  "contactNumber": {
                      "type": "string",
                      "nullable": true
                  },
                  "phoneCode": {
                      "type": "string",
                      "nullable": true
                  },
                  "companyAddress": {
                      "type": "string",
                      "nullable": true
                  },
                  "maxRecBidQuantity": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "companyBusinessAddress": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "BusinessAccountInformationResultPagedResult": {
              "type": "object",
              "properties": {
                  "paging": {
                      "$ref": "#/components/schemas/Paging"
                  },
                  "records": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/BusinessAccountInformationResult"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "BusinessAccountInformationResultPagedResultResponse": {
              "type": "object",
              "properties": {
                  "data": {
                      "$ref": "#/components/schemas/BusinessAccountInformationResultPagedResult"
                  },
                  "statusCode": {
                      "$ref": "#/components/schemas/HttpStatusCode"
                  },
                  "code": {
                      "type": "string",
                      "nullable": true
                  },
                  "message": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "BusinessAccountResponse": {
              "type": "object",
              "properties": {
                  "accountId": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "approvedDate": {
                      "type": "string",
                      "format": "date-time"
                  },
                  "companyName": {
                      "type": "string",
                      "nullable": true
                  },
                  "companyRegistrationNumber": {
                      "type": "string",
                      "nullable": true
                  },
                  "businessType": {
                      "type": "string",
                      "nullable": true
                  },
                  "username": {
                      "type": "string",
                      "nullable": true
                  },
                  "email": {
                      "type": "string",
                      "nullable": true
                  },
                  "countryName": {
                      "type": "string",
                      "nullable": true
                  },
                  "countryCode": {
                      "type": "string",
                      "nullable": true
                  },
                  "stringApprovedDate": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "BusinessAccountResponsePagedResult": {
              "type": "object",
              "properties": {
                  "paging": {
                      "$ref": "#/components/schemas/Paging"
                  },
                  "records": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/BusinessAccountResponse"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "BusinessAccountResponsePagedResultResponse": {
              "type": "object",
              "properties": {
                  "data": {
                      "$ref": "#/components/schemas/BusinessAccountResponsePagedResult"
                  },
                  "statusCode": {
                      "$ref": "#/components/schemas/HttpStatusCode"
                  },
                  "code": {
                      "type": "string",
                      "nullable": true
                  },
                  "message": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "BuyOrderStatus": {
              "enum": [
                  "All",
                  "Pending",
                  "Approved",
                  "Rejected"
              ],
              "type": "string"
          },
          "CancelBidRequest": {
              "type": "object",
              "properties": {
                  "remark": {
                      "maxLength": 1000,
                      "minLength": 0,
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "CreateAccountRegistrationRequest": {
              "required": [
                  "companyAddress",
                  "companyName",
                  "companyRegistrationNumber",
                  "contactNumber",
                  "countryCode",
                  "englishCompanyName",
                  "phoneCode"
              ],
              "type": "object",
              "properties": {
                  "companyRegistrationNumber": {
                      "maxLength": 100,
                      "minLength": 0,
                      "type": "string",
                      "description": "Company Registration Number of Account",
                      "example": "MLSIA10252023"
                  },
                  "companyName": {
                      "maxLength": 255,
                      "minLength": 0,
                      "type": "string",
                      "description": "Company Name of Account",
                      "example": "Malaysia Solar Company"
                  },
                  "companyAddress": {
                      "maxLength": 255,
                      "minLength": 0,
                      "type": "string",
                      "description": "Company Address of Account",
                      "example": "Selangor, Batu Caves, Malaysia"
                  },
                  "countryCode": {
                      "maxLength": 2,
                      "minLength": 0,
                      "type": "string",
                      "description": "Country code of the Company of Account",
                      "example": "VN"
                  },
                  "provinceCode": {
                      "type": "string",
                      "description": "Province code of the Company of Account",
                      "nullable": true,
                      "example": "VN-52"
                  },
                  "contactNumber": {
                      "maxLength": 20,
                      "minLength": 4,
                      "pattern": "^(?:\\s*\\d){4}.*",
                      "type": "string",
                      "description": "Contact Number of Account",
                      "example": "3 6137-9579"
                  },
                  "phoneCode": {
                      "pattern": "^\\+\\d{1,4}$",
                      "type": "string",
                      "description": "Contact Number of Account",
                      "example": "+65"
                  },
                  "companyBusinessAddress": {
                      "maxLength": 255,
                      "minLength": 0,
                      "type": "string",
                      "description": "Company Business Address",
                      "nullable": true,
                      "example": "Selangor, Batu Caves, Malaysia"
                  },
                  "companyPICName": {
                      "maxLength": 255,
                      "minLength": 0,
                      "type": "string",
                      "description": "Company PIC Name",
                      "nullable": true,
                      "example": "Malaysia Solar Company"
                  },
                  "companyPICEmail": {
                      "maxLength": 255,
                      "minLength": 0,
                      "type": "string",
                      "description": "Company PIC Email",
                      "nullable": true,
                      "example": "user_1@yopmail.com"
                  },
                  "companySSTRegistrationNumber": {
                      "maxLength": 255,
                      "minLength": 0,
                      "type": "string",
                      "description": "Company SST Registration Number",
                      "nullable": true,
                      "example": "MLSIA10252023"
                  },
                  "tnbCaNumber": {
                      "maxLength": 255,
                      "minLength": 0,
                      "type": "string",
                      "description": "TNB CA Number",
                      "nullable": true,
                      "example": "MLSIA10252023"
                  },
                  "confirmInformationIsTrue": {
                      "type": "boolean",
                      "description": "Confirm Information Is True",
                      "example": true
                  },
                  "confirmProvidePersonalData": {
                      "type": "boolean",
                      "description": "Confirm Provide Personal Data",
                      "example": true
                  },
                  "confirmUpToDateDataToTNBX": {
                      "type": "boolean",
                      "description": "Confirm UpTo Date Data To TNBX",
                      "example": true
                  },
                  "confirmHaveAuthorization": {
                      "type": "boolean",
                      "description": "Confirm Have Authorization",
                      "example": true
                  },
                  "businessType": {
                      "maxLength": 255,
                      "minLength": 0,
                      "type": "string",
                      "description": "Business Type",
                      "nullable": true,
                      "example": "BuildingsAndConstruction"
                  },
                  "otherBusinessType": {
                      "maxLength": 255,
                      "minLength": 0,
                      "type": "string",
                      "nullable": true
                  },
                  "englishCompanyName": {
                      "maxLength": 255,
                      "minLength": 0,
                      "pattern": "^[a-zA-Z0-9\\s\\p{P}]{0,255}$",
                      "type": "string",
                      "description": "Company Name of Account",
                      "example": "Malaysia Solar Company"
                  }
              },
              "additionalProperties": false
          },
          "CreateAuctionItemsRequest": {
              "required": [
                  "recCountry",
                  "recFuelType"
              ],
              "type": "object",
              "properties": {
                  "auctionId": {
                      "type": "integer",
                      "description": "AuctionId is the result of API create-auction, one auction may contain multiple auction items",
                      "format": "int64",
                      "example": 8
                  },
                  "recCountry": {
                      "maxLength": 2,
                      "minLength": 0,
                      "type": "string",
                      "description": "Country of these RECs that seller want to sell",
                      "example": "SG"
                  },
                  "recCountryName": {
                      "type": "string",
                      "description": "Country of these RECs that seller want to sell",
                      "nullable": true,
                      "example": "Singapore"
                  },
                  "recFuelType": {
                      "type": "string",
                      "description": "FuelType of these RECs that seller want to sell",
                      "example": "Solar"
                  },
                  "recVintage": {
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "description": "Vintage of these RECs that seller want to sell (year), if the auction is not Spot RECs (Contract REC), set Vintage = 0",
                      "format": "int32",
                      "example": 2021
                  },
                  "recQuantity": {
                      "maximum": 100000000,
                      "minimum": 1,
                      "type": "integer",
                      "description": "Quantity of RECs that seller want to sell",
                      "format": "int32",
                      "example": 20000
                  },
                  "minimumBidPrice": {
                      "minimum": 0,
                      "type": "number",
                      "description": "Lowest price that owner want to sell (per REC)",
                      "format": "double",
                      "example": 0.2
                  },
                  "maximumBidPrice": {
                      "maximum": 9999999.99,
                      "minimum": 0,
                      "type": "number",
                      "description": "Highest price that owner want to buy (per REC)",
                      "format": "double",
                      "example": 12
                  },
                  "partialFulfillment": {
                      "type": "boolean",
                      "description": "True: allow partial fill, False: not allowed partial fill"
                  },
                  "tickSize": {
                      "type": "number",
                      "description": "Tick size of this auction item",
                      "format": "double",
                      "example": 0.1
                  }
              },
              "additionalProperties": false
          },
          "CreateAuctionRequest": {
              "required": [
                  "auctionTitle",
                  "sellerBusinessAccountId",
                  "sellerBusinessAccountName",
                  "sellerEmail",
                  "sellerUserName"
              ],
              "type": "object",
              "properties": {
                  "sellerUserName": {
                      "type": "string",
                      "description": "SellerUserName who sell RECs for this auction",
                      "example": "trec-user1"
                  },
                  "sellerBusinessAccountId": {
                      "type": "string",
                      "description": "Business Account Id of Seller",
                      "format": "uuid",
                      "example": "3578e530-6c03-4351-9027-c61445f754a8"
                  },
                  "sellerBusinessAccountName": {
                      "type": "string",
                      "description": "Business Account Name of Seller",
                      "example": "redex-seller"
                  },
                  "sellerEmail": {
                      "type": "string",
                      "description": "Seller's email address",
                      "example": "trec.user1@trecs.ai"
                  },
                  "auctionTitle": {
                      "maxLength": 250,
                      "minLength": 0,
                      "type": "string",
                      "description": "Title of the auction",
                      "example": "Singapore RECs"
                  },
                  "auctionDateTime": {
                      "type": "string",
                      "description": "Datetime that start the auction, it's UTC time",
                      "format": "date-time",
                      "example": "2021-09-01T08:30:00"
                  },
                  "auctionEndTime": {
                      "type": "string",
                      "description": "Datetime that end the auction, it's UTC time",
                      "format": "date-time",
                      "example": "2021-10-01T08:30:00"
                  },
                  "minimumBiddingRECQuantity": {
                      "maximum": 100000000,
                      "minimum": 1,
                      "type": "integer",
                      "description": "Bidders cannot bid lower than this quantity",
                      "format": "int32",
                      "example": 1000
                  },
                  "minimumRECQuantity": {
                      "maximum": 100000000,
                      "minimum": 1,
                      "type": "integer",
                      "description": "Auction Item quantity cannot be lower than this",
                      "format": "int32",
                      "example": 1000
                  },
                  "sellerDepositRequirement": {
                      "type": "integer",
                      "description": "Seller need to deposit minimum this amount (in USD)",
                      "format": "int32",
                      "example": 2000
                  },
                  "buyerDepositRequirement": {
                      "type": "integer",
                      "description": "Buyers need to deposit minimum this amount (in USD)",
                      "format": "int32",
                      "example": 2000
                  },
                  "buyerProcessingFee": {
                      "maximum": 1,
                      "minimum": 0,
                      "type": "number",
                      "description": "Buyer Processing Fee Percentage (allow up to 2 decimal, min: 0, max: 1)",
                      "format": "double",
                      "example": 0.2
                  },
                  "sellerProcessingFee": {
                      "maximum": 1,
                      "minimum": 0,
                      "type": "number",
                      "description": "Seller Processing Fee Percentage (allow up to 2 decimal, min: 0, max: 1)",
                      "format": "double",
                      "example": 0.2
                  },
                  "isSpotRecs": {
                      "type": "boolean",
                      "description": "Spot RECs are RECs that available in seller's inventory. (ReHash Platform)",
                      "example": false
                  },
                  "isPublic": {
                      "type": "boolean",
                      "description": "The auction is public for bidders or not (private)",
                      "example": false
                  },
                  "currencyCode": {
                      "type": "string",
                      "nullable": true
                  },
                  "allowSellerEdit": {
                      "type": "boolean",
                      "description": "It is true if the seller is allowed to add items to the auction",
                      "example": false
                  },
                  "auctionType": {
                      "$ref": "#/components/schemas/AuctionType"
                  },
                  "buyers": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/CreateBidderRequest"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "CreateBidderRequest": {
              "required": [
                  "bidderEmail",
                  "bidderUserName",
                  "businessAccountName"
              ],
              "type": "object",
              "properties": {
                  "bidderUserName": {
                      "type": "string"
                  },
                  "bidderName": {
                      "type": "string",
                      "nullable": true
                  },
                  "bidderEmail": {
                      "type": "string"
                  },
                  "businessAccountId": {
                      "type": "string",
                      "format": "uuid"
                  },
                  "businessAccountName": {
                      "type": "string"
                  },
                  "bidMaxRecQuantity": {
                      "maximum": 2147483647,
                      "minimum": -1,
                      "type": "integer",
                      "format": "int32"
                  },
                  "bidderId": {
                      "type": "integer",
                      "format": "int64"
                  }
              },
              "additionalProperties": false
          },
          "CreateBidRequest": {
              "type": "object",
              "properties": {
                  "auctionItemId": {
                      "minimum": 1,
                      "type": "integer",
                      "format": "int64"
                  },
                  "bidValue": {
                      "minimum": 0.01,
                      "type": "number",
                      "format": "double"
                  },
                  "bidRECQuantity": {
                      "maximum": 100000000,
                      "minimum": 1,
                      "type": "integer",
                      "format": "int32"
                  }
              },
              "additionalProperties": false
          },
          "CreateBuyOrderRequest": {
              "type": "object",
              "properties": {
                  "sellOrderItemId": {
                      "minimum": 1,
                      "type": "integer",
                      "format": "int64"
                  },
                  "recQuantity": {
                      "maximum": 100000000,
                      "minimum": 1,
                      "type": "integer",
                      "format": "int32"
                  },
                  "unitPrice": {
                      "maximum": 9999999.99,
                      "minimum": 0.05,
                      "type": "number",
                      "format": "float"
                  },
                  "businessAccountId": {
                      "type": "string",
                      "format": "uuid"
                  }
              },
              "additionalProperties": false
          },
          "CreateOrUpdateTickSizeRequest": {
              "required": [
                  "countryCode",
                  "fuelType"
              ],
              "type": "object",
              "properties": {
                  "countryCode": {
                      "type": "string"
                  },
                  "countryName": {
                      "type": "string",
                      "nullable": true
                  },
                  "fuelType": {
                      "type": "string"
                  },
                  "tickSize": {
                      "type": "number",
                      "format": "double"
                  }
              },
              "additionalProperties": false
          },
          "CreateRetirementRequest": {
              "type": "object",
              "properties": {
                  "retireForOwn": {
                      "type": "boolean"
                  },
                  "reason": {
                      "maxLength": 500,
                      "minLength": 1,
                      "type": "string",
                      "nullable": true
                  },
                  "beneficiaryName": {
                      "maxLength": 255,
                      "minLength": 0,
                      "type": "string",
                      "nullable": true
                  },
                  "beneficiaryType": {
                      "type": "string",
                      "nullable": true
                  },
                  "nameToAppearOnCertificate": {
                      "maxLength": 255,
                      "minLength": 0,
                      "type": "string",
                      "nullable": true
                  },
                  "countryCode": {
                      "maxLength": 2,
                      "minLength": 0,
                      "type": "string",
                      "nullable": true
                  },
                  "buildingAddress": {
                      "maxLength": 255,
                      "minLength": 0,
                      "type": "string",
                      "nullable": true
                  },
                  "buildingName": {
                      "maxLength": 255,
                      "minLength": 0,
                      "type": "string",
                      "nullable": true
                  },
                  "buildingOwnerName": {
                      "maxLength": 255,
                      "minLength": 0,
                      "type": "string",
                      "nullable": true
                  },
                  "corporateAddress": {
                      "maxLength": 255,
                      "minLength": 0,
                      "type": "string",
                      "nullable": true
                  },
                  "corporateName": {
                      "maxLength": 255,
                      "minLength": 0,
                      "type": "string",
                      "nullable": true
                  },
                  "personalAddress": {
                      "maxLength": 255,
                      "minLength": 0,
                      "type": "string",
                      "nullable": true
                  },
                  "personalName": {
                      "maxLength": 255,
                      "minLength": 0,
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "CreateSellOrderRequest": {
              "required": [
                  "countryCode",
                  "fuelType",
                  "sellerBusinessAccountId",
                  "sellerBusinessAccountName",
                  "sellerEmail",
                  "sellerUserName",
                  "sellOrderTitle",
                  "vintagePeriod",
                  "vintageYear"
              ],
              "type": "object",
              "properties": {
                  "sellerUserName": {
                      "type": "string",
                      "description": "SellerUserName who sell RECs for this Sell Order",
                      "example": "trec-user1"
                  },
                  "sellerBusinessAccountId": {
                      "type": "string",
                      "description": "Business Account Id of Seller",
                      "format": "uuid",
                      "example": "3578e530-6c03-4351-9027-c61445f754a8"
                  },
                  "sellerBusinessAccountName": {
                      "type": "string",
                      "description": "Business Account Name of Seller",
                      "example": "redex-seller"
                  },
                  "sellerEmail": {
                      "type": "string",
                      "description": "Seller's email address",
                      "example": "trec.user1@trecs.ai"
                  },
                  "sellOrderTitle": {
                      "maxLength": 250,
                      "minLength": 0,
                      "type": "string",
                      "description": "Title of the sell order",
                      "example": "Singapore RECs"
                  },
                  "publishTime": {
                      "type": "string",
                      "description": "Datetime that the sell order will be publish, it's UTC time",
                      "format": "date-time",
                      "example": "2021-09-01T08:30:00"
                  },
                  "countryCode": {
                      "maxLength": 2,
                      "minLength": 0,
                      "type": "string",
                      "description": "Country code",
                      "example": "VN"
                  },
                  "provinceCode": {
                      "maxLength": 20,
                      "minLength": 0,
                      "type": "string",
                      "description": "Province code",
                      "nullable": true,
                      "example": "VN-52"
                  },
                  "fuelType": {
                      "maxLength": 50,
                      "minLength": 0,
                      "type": "string",
                      "description": "FuelType of these RECs that seller want to sell",
                      "example": "Solar"
                  },
                  "vintageYear": {
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "description": "The Vintage",
                      "format": "int32"
                  },
                  "vintagePeriod": {
                      "$ref": "#/components/schemas/VintagePeriodType"
                  },
                  "quantity": {
                      "maximum": 100000000,
                      "minimum": 1,
                      "type": "integer",
                      "description": "Quantity of RECs that seller want to sell",
                      "format": "int32",
                      "example": 20000
                  },
                  "unitPrice": {
                      "maximum": 9999999.99,
                      "minimum": 0.05,
                      "type": "number",
                      "description": "The price that seller want to sell (per REC)",
                      "format": "float",
                      "example": 0.2
                  },
                  "isPublishNow": {
                      "type": "boolean",
                      "description": "The sell order will be publish immediately if this value is true",
                      "example": true
                  },
                  "currencyCode": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "CreateTemplateRequest": {
              "required": [
                  "templateType"
              ],
              "type": "object",
              "properties": {
                  "templateType": {
                      "$ref": "#/components/schemas/TemplateType"
                  },
                  "content": {
                      "type": "string",
                      "nullable": true
                  },
                  "fileId": {
                      "type": "integer",
                      "format": "int64"
                  }
              },
              "additionalProperties": false
          },
          "EntityBlobType": {
              "enum": [
                  "AuctionThumbnail",
                  "AuctionDetail",
                  "Template",
                  "SellOrderDetail"
              ],
              "type": "string"
          },
          "HttpStatusCode": {
              "enum": [
                  "Continue",
                  "SwitchingProtocols",
                  "Processing",
                  "EarlyHints",
                  "OK",
                  "Created",
                  "Accepted",
                  "NonAuthoritativeInformation",
                  "NoContent",
                  "ResetContent",
                  "PartialContent",
                  "MultiStatus",
                  "AlreadyReported",
                  "IMUsed",
                  "MultipleChoices",
                  "MovedPermanently",
                  "Found",
                  "SeeOther",
                  "NotModified",
                  "UseProxy",
                  "Unused",
                  "RedirectKeepVerb",
                  "PermanentRedirect",
                  "BadRequest",
                  "Unauthorized",
                  "PaymentRequired",
                  "Forbidden",
                  "NotFound",
                  "MethodNotAllowed",
                  "NotAcceptable",
                  "ProxyAuthenticationRequired",
                  "RequestTimeout",
                  "Conflict",
                  "Gone",
                  "LengthRequired",
                  "PreconditionFailed",
                  "RequestEntityTooLarge",
                  "RequestUriTooLong",
                  "UnsupportedMediaType",
                  "RequestedRangeNotSatisfiable",
                  "ExpectationFailed",
                  "MisdirectedRequest",
                  "UnprocessableEntity",
                  "Locked",
                  "FailedDependency",
                  "UpgradeRequired",
                  "PreconditionRequired",
                  "TooManyRequests",
                  "RequestHeaderFieldsTooLarge",
                  "UnavailableForLegalReasons",
                  "InternalServerError",
                  "NotImplemented",
                  "BadGateway",
                  "ServiceUnavailable",
                  "GatewayTimeout",
                  "HttpVersionNotSupported",
                  "VariantAlsoNegotiates",
                  "InsufficientStorage",
                  "LoopDetected",
                  "NotExtended",
                  "NetworkAuthenticationRequired"
              ],
              "type": "string"
          },
          "InitialBidRequest": {
              "type": "object",
              "properties": {
                  "auctionItemId": {
                      "minimum": 1,
                      "type": "integer",
                      "format": "int64"
                  },
                  "initialBids": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/AddBidRequest"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "Int64Response": {
              "type": "object",
              "properties": {
                  "data": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "statusCode": {
                      "$ref": "#/components/schemas/HttpStatusCode"
                  },
                  "code": {
                      "type": "string",
                      "nullable": true
                  },
                  "message": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "Paging": {
              "type": "object",
              "properties": {
                  "current": {
                      "type": "integer",
                      "format": "int32"
                  },
                  "size": {
                      "type": "integer",
                      "format": "int32"
                  },
                  "total": {
                      "type": "integer",
                      "format": "int32"
                  }
              },
              "additionalProperties": false
          },
          "RegisterAuctionRequest": {
              "type": "object",
              "properties": {
                  "businessAccountId": {
                      "type": "string",
                      "format": "uuid"
                  },
                  "businessAccountName": {
                      "type": "string",
                      "nullable": true
                  },
                  "partialFulfillment": {
                      "type": "boolean"
                  },
                  "bidMaxRecQuantity": {
                      "type": "integer",
                      "format": "int64"
                  }
              },
              "additionalProperties": false
          },
          "RejectBuyOrderRequest": {
              "required": [
                  "remark"
              ],
              "type": "object",
              "properties": {
                  "remark": {
                      "maxLength": 1000,
                      "minLength": 0,
                      "type": "string",
                      "description": "Remark of the reject sell order",
                      "example": "this is a remark"
                  }
              },
              "additionalProperties": false
          },
          "RemarkResponse": {
              "type": "object",
              "properties": {
                  "createdTime": {
                      "type": "string",
                      "format": "date-time"
                  },
                  "content": {
                      "type": "string",
                      "nullable": true
                  },
                  "createdBy": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "RemarkResponseIEnumerableResponse": {
              "type": "object",
              "properties": {
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/RemarkResponse"
                      },
                      "nullable": true
                  },
                  "statusCode": {
                      "$ref": "#/components/schemas/HttpStatusCode"
                  },
                  "code": {
                      "type": "string",
                      "nullable": true
                  },
                  "message": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "SellerResult": {
              "type": "object",
              "properties": {
                  "sellerId": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "createdTime": {
                      "type": "string",
                      "format": "date-time"
                  },
                  "sellerUserName": {
                      "type": "string",
                      "nullable": true
                  },
                  "sellerName": {
                      "type": "string",
                      "nullable": true
                  },
                  "sellerEmail": {
                      "type": "string",
                      "nullable": true
                  },
                  "businessAccountId": {
                      "type": "string",
                      "format": "uuid"
                  },
                  "businessAccountName": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "SellOrderTab": {
              "enum": [
                  "Live",
                  "Past"
              ],
              "type": "string"
          },
          "SimpleAccountRegistrationResult": {
              "type": "object",
              "properties": {
                  "accountRegistrationId": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "createdTime": {
                      "type": "string",
                      "format": "date-time"
                  },
                  "companyName": {
                      "type": "string",
                      "nullable": true
                  },
                  "companyRegistrationNumber": {
                      "type": "string",
                      "nullable": true
                  },
                  "countryCode": {
                      "type": "string",
                      "nullable": true
                  },
                  "countryName": {
                      "type": "string",
                      "nullable": true
                  },
                  "status": {
                      "$ref": "#/components/schemas/AccountRegistrationStatus"
                  }
              },
              "additionalProperties": false
          },
          "SimpleAccountRegistrationResultPagedResult": {
              "type": "object",
              "properties": {
                  "paging": {
                      "$ref": "#/components/schemas/Paging"
                  },
                  "records": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/SimpleAccountRegistrationResult"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "SimpleAccountRegistrationResultPagedResultResponse": {
              "type": "object",
              "properties": {
                  "data": {
                      "$ref": "#/components/schemas/SimpleAccountRegistrationResultPagedResult"
                  },
                  "statusCode": {
                      "$ref": "#/components/schemas/HttpStatusCode"
                  },
                  "code": {
                      "type": "string",
                      "nullable": true
                  },
                  "message": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "SimpleAuctionItemResult": {
              "type": "object",
              "properties": {
                  "auctionItemId": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "recCountry": {
                      "type": "string",
                      "nullable": true
                  },
                  "recFuelType": {
                      "type": "string",
                      "nullable": true
                  },
                  "recVintage": {
                      "type": "integer",
                      "format": "int32"
                  },
                  "recQuantity": {
                      "type": "integer",
                      "format": "int32"
                  },
                  "minimumBidPrice": {
                      "type": "number",
                      "format": "double"
                  },
                  "actualRemainingRECQuantity": {
                      "type": "integer",
                      "format": "int32"
                  }
              },
              "additionalProperties": false
          },
          "SimpleAuctionResult": {
              "type": "object",
              "properties": {
                  "auctionId": {
                      "type": "integer",
                      "description": "AuctionId, it's unique in the system",
                      "format": "int64",
                      "example": 123
                  },
                  "auctionTitle": {
                      "type": "string",
                      "description": "Title of the auction",
                      "nullable": true,
                      "example": "Singapore RECs"
                  },
                  "auctionDateTime": {
                      "type": "string",
                      "description": "Datetime that start the auction, it's UTC time",
                      "format": "date-time",
                      "example": "2021-09-01T08:30:00"
                  },
                  "auctionEndTime": {
                      "type": "string",
                      "description": "Datetime that end the auction, it's UTC time",
                      "format": "date-time",
                      "example": "2022-09-01T08:30:00.0000000"
                  },
                  "noRegisteredUsers": {
                      "type": "integer",
                      "description": "Number of registered users",
                      "format": "int32",
                      "example": 23
                  },
                  "registered": {
                      "type": "boolean",
                      "description": "Determine if user is registered this auction",
                      "example": true
                  },
                  "isOwner": {
                      "type": "boolean",
                      "description": "Determine if user is owner of this auction",
                      "example": true
                  },
                  "itemCount": {
                      "type": "integer",
                      "format": "int32"
                  },
                  "isPublic": {
                      "type": "boolean"
                  },
                  "allowSellerEdit": {
                      "type": "boolean"
                  },
                  "isSpotRecs": {
                      "type": "boolean"
                  },
                  "fuelTypes": {
                      "type": "string",
                      "nullable": true
                  },
                  "thumbnailUrl": {
                      "type": "string",
                      "nullable": true
                  },
                  "auctionType": {
                      "$ref": "#/components/schemas/AuctionType"
                  },
                  "auctionItems": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/SimpleAuctionItemResult"
                      },
                      "nullable": true
                  },
                  "bidMaxRecQuantity": {
                      "type": "integer",
                      "format": "int32"
                  },
                  "numberOfBids": {
                      "type": "integer",
                      "format": "int32"
                  }
              },
              "additionalProperties": false
          },
          "SimpleAuctionResultPagedResult": {
              "type": "object",
              "properties": {
                  "paging": {
                      "$ref": "#/components/schemas/Paging"
                  },
                  "records": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/SimpleAuctionResult"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "SimpleAuctionResultPagedResultResponse": {
              "type": "object",
              "properties": {
                  "data": {
                      "$ref": "#/components/schemas/SimpleAuctionResultPagedResult"
                  },
                  "statusCode": {
                      "$ref": "#/components/schemas/HttpStatusCode"
                  },
                  "code": {
                      "type": "string",
                      "nullable": true
                  },
                  "message": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "SimpleBuyOrderResult": {
              "type": "object",
              "properties": {
                  "buyOrderId": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "sellOrderId": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "sellOrderItemId": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "buyerUsername": {
                      "type": "string",
                      "nullable": true
                  },
                  "buyerCompanyName": {
                      "type": "string",
                      "nullable": true
                  },
                  "buyerEmail": {
                      "type": "string",
                      "nullable": true
                  },
                  "companyPICEmail": {
                      "type": "string",
                      "nullable": true
                  },
                  "sellOrderTitle": {
                      "type": "string",
                      "nullable": true
                  },
                  "fuelType": {
                      "type": "string",
                      "nullable": true
                  },
                  "vintageYear": {
                      "type": "integer",
                      "format": "int32"
                  },
                  "vintagePeriod": {
                      "type": "string",
                      "nullable": true
                  },
                  "quantity": {
                      "type": "integer",
                      "format": "int32"
                  },
                  "unitPrice": {
                      "type": "number",
                      "format": "double"
                  },
                  "totalAmount": {
                      "type": "number",
                      "format": "double"
                  },
                  "createdTime": {
                      "type": "string",
                      "format": "date-time"
                  },
                  "status": {
                      "$ref": "#/components/schemas/BuyOrderStatus"
                  }
              },
              "additionalProperties": false
          },
          "SimpleBuyOrderResultPagedResult": {
              "type": "object",
              "properties": {
                  "paging": {
                      "$ref": "#/components/schemas/Paging"
                  },
                  "records": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/SimpleBuyOrderResult"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "SimpleBuyOrderResultPagedResultResponse": {
              "type": "object",
              "properties": {
                  "data": {
                      "$ref": "#/components/schemas/SimpleBuyOrderResultPagedResult"
                  },
                  "statusCode": {
                      "$ref": "#/components/schemas/HttpStatusCode"
                  },
                  "code": {
                      "type": "string",
                      "nullable": true
                  },
                  "message": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "SimpleReHashAccountResponse": {
              "type": "object",
              "properties": {
                  "id": {
                      "type": "string",
                      "format": "uuid"
                  },
                  "companyName": {
                      "type": "string",
                      "nullable": true
                  },
                  "companyRegistrationNumber": {
                      "type": "string",
                      "nullable": true
                  },
                  "englishCompanyName": {
                      "type": "string",
                      "nullable": true
                  },
                  "country": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "SimpleReHashAccountResponseIEnumerableResponse": {
              "type": "object",
              "properties": {
                  "data": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/SimpleReHashAccountResponse"
                      },
                      "nullable": true
                  },
                  "statusCode": {
                      "$ref": "#/components/schemas/HttpStatusCode"
                  },
                  "code": {
                      "type": "string",
                      "nullable": true
                  },
                  "message": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "SimpleSellOrderResult": {
              "type": "object",
              "properties": {
                  "sellOrderId": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "sellOrderItemId": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "sellOrderTitle": {
                      "type": "string",
                      "nullable": true
                  },
                  "publishTime": {
                      "type": "string",
                      "format": "date-time"
                  },
                  "thumbnailUrl": {
                      "type": "string",
                      "nullable": true
                  },
                  "fuelType": {
                      "type": "string",
                      "nullable": true
                  },
                  "vintageYear": {
                      "type": "integer",
                      "format": "int32"
                  },
                  "vintagePeriod": {
                      "type": "string",
                      "nullable": true
                  },
                  "quantity": {
                      "type": "integer",
                      "format": "int32"
                  },
                  "unitPrice": {
                      "type": "number",
                      "format": "double"
                  },
                  "remainingQuantity": {
                      "type": "integer",
                      "format": "int32"
                  },
                  "isCancelled": {
                      "type": "boolean"
                  },
                  "isOwner": {
                      "type": "boolean"
                  }
              },
              "additionalProperties": false
          },
          "SimpleSellOrderResultPagedResult": {
              "type": "object",
              "properties": {
                  "paging": {
                      "$ref": "#/components/schemas/Paging"
                  },
                  "records": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/SimpleSellOrderResult"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "SimpleSellOrderResultPagedResultResponse": {
              "type": "object",
              "properties": {
                  "data": {
                      "$ref": "#/components/schemas/SimpleSellOrderResultPagedResult"
                  },
                  "statusCode": {
                      "$ref": "#/components/schemas/HttpStatusCode"
                  },
                  "code": {
                      "type": "string",
                      "nullable": true
                  },
                  "message": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "StringResponse": {
              "type": "object",
              "properties": {
                  "data": {
                      "type": "string",
                      "nullable": true
                  },
                  "statusCode": {
                      "$ref": "#/components/schemas/HttpStatusCode"
                  },
                  "code": {
                      "type": "string",
                      "nullable": true
                  },
                  "message": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "StringStringInt32DecimalDictionaryDictionaryDictionaryResponse": {
              "type": "object",
              "properties": {
                  "data": {
                      "type": "object",
                      "additionalProperties": {
                          "type": "object",
                          "additionalProperties": {
                              "type": "object",
                              "additionalProperties": {
                                  "type": "number",
                                  "format": "double"
                              }
                          }
                      },
                      "nullable": true
                  },
                  "statusCode": {
                      "$ref": "#/components/schemas/HttpStatusCode"
                  },
                  "code": {
                      "type": "string",
                      "nullable": true
                  },
                  "message": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "SubmitInitialBidRequest": {
              "required": [
                  "initialBidRequests"
              ],
              "type": "object",
              "properties": {
                  "initialBidRequests": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/InitialBidRequest"
                      }
                  }
              },
              "additionalProperties": false
          },
          "TemplateResultForGetList": {
              "type": "object",
              "properties": {
                  "templateId": {
                      "type": "integer",
                      "format": "int32"
                  },
                  "createdTime": {
                      "type": "string",
                      "format": "date-time"
                  },
                  "createdBy": {
                      "type": "string",
                      "nullable": true
                  },
                  "updatedTime": {
                      "type": "string",
                      "format": "date-time"
                  },
                  "updatedBy": {
                      "type": "string",
                      "nullable": true
                  },
                  "templateType": {
                      "$ref": "#/components/schemas/TemplateType"
                  },
                  "templateName": {
                      "type": "string",
                      "nullable": true
                  },
                  "blobId": {
                      "type": "integer",
                      "format": "int32"
                  },
                  "blobContent": {
                      "type": "string",
                      "nullable": true
                  },
                  "isFileType": {
                      "type": "boolean"
                  }
              },
              "additionalProperties": false
          },
          "TemplateResultForGetListPagedResult": {
              "type": "object",
              "properties": {
                  "paging": {
                      "$ref": "#/components/schemas/Paging"
                  },
                  "records": {
                      "type": "array",
                      "items": {
                          "$ref": "#/components/schemas/TemplateResultForGetList"
                      },
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "TemplateResultForGetListPagedResultResponse": {
              "type": "object",
              "properties": {
                  "data": {
                      "$ref": "#/components/schemas/TemplateResultForGetListPagedResult"
                  },
                  "statusCode": {
                      "$ref": "#/components/schemas/HttpStatusCode"
                  },
                  "code": {
                      "type": "string",
                      "nullable": true
                  },
                  "message": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "TemplateType": {
              "enum": [
                  "TermsAndConditions",
                  "Privacy",
                  "UserGuide"
              ],
              "type": "string"
          },
          "TemplateTypeResult": {
              "type": "object",
              "properties": {
                  "typeName": {
                      "type": "string",
                      "nullable": true
                  },
                  "typeValue": {
                      "type": "string",
                      "nullable": true
                  },
                  "isFileType": {
                      "type": "boolean"
                  }
              },
              "additionalProperties": false
          },
          "TemplateTypeResultResponse": {
              "type": "object",
              "properties": {
                  "data": {
                      "$ref": "#/components/schemas/TemplateTypeResult"
                  },
                  "statusCode": {
                      "$ref": "#/components/schemas/HttpStatusCode"
                  },
                  "code": {
                      "type": "string",
                      "nullable": true
                  },
                  "message": {
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "UpdateAccountRegistrationStatusRequest": {
              "required": [
                  "maxBidQuantity",
                  "remarkContent"
              ],
              "type": "object",
              "properties": {
                  "maxBidQuantity": {
                      "type": "integer",
                      "description": "Max Bid Quantity of Account",
                      "format": "int64",
                      "example": 50
                  },
                  "remarkContent": {
                      "type": "string",
                      "description": "Remark Content when admin approve/reject an account registration",
                      "example": "Ok"
                  }
              },
              "additionalProperties": false
          },
          "UpdateAuctionDetailRequest": {
              "type": "object",
              "properties": {
                  "description": {
                      "type": "string",
                      "description": "Description of the auction (impact project details, device information, etc...)",
                      "nullable": true
                  },
                  "longitude": {
                      "maximum": 180,
                      "minimum": -180,
                      "pattern": "^(0|-?\\d{0,3}(\\.\\d{0,6})?)$",
                      "type": "number",
                      "description": "Longitude of the device/project's address",
                      "format": "double",
                      "nullable": true,
                      "example": 1.289982
                  },
                  "latitude": {
                      "maximum": 90,
                      "minimum": -90,
                      "pattern": "^(0|-?\\d{0,3}(\\.\\d{0,6})?)$",
                      "type": "number",
                      "description": "Latitude of the device/project's address",
                      "format": "double",
                      "nullable": true,
                      "example": 103.866554
                  },
                  "address": {
                      "maxLength": 255,
                      "minLength": 0,
                      "type": "string",
                      "description": "Address of the device/project",
                      "nullable": true
                  },
                  "fileIds": {
                      "type": "array",
                      "items": {
                          "type": "integer",
                          "format": "int64"
                      },
                      "description": "List Ids of the auction images",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "UpdateAuctionRequest": {
              "required": [
                  "auctionTitle",
                  "sellerBusinessAccountId",
                  "sellerBusinessAccountName",
                  "sellerEmail",
                  "sellerUserName"
              ],
              "type": "object",
              "properties": {
                  "auctionId": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "sellerUserName": {
                      "type": "string",
                      "description": "SellerUserName who sell RECs for this auction",
                      "example": "trec-user1"
                  },
                  "sellerEmail": {
                      "type": "string",
                      "description": "Seller's email address",
                      "example": "trec.user1@trecs.ai"
                  },
                  "sellerBusinessAccountId": {
                      "type": "string",
                      "description": "Business Account Id of Seller",
                      "format": "uuid",
                      "example": "3578e530-6c03-4351-9027-c61445f754a8"
                  },
                  "sellerBusinessAccountName": {
                      "type": "string",
                      "description": "Business Account Name of Seller",
                      "example": "redex-seller"
                  },
                  "auctionTitle": {
                      "maxLength": 250,
                      "minLength": 0,
                      "type": "string",
                      "description": "Title of the auction",
                      "example": "Singapore RECs"
                  },
                  "auctionDateTime": {
                      "type": "string",
                      "description": "Datetime that start the auction, it's UTC time",
                      "format": "date-time",
                      "example": "2021-09-01T08:30:00"
                  },
                  "auctionEndTime": {
                      "type": "string",
                      "description": "Datetime that start the auction, it's UTC time",
                      "format": "date-time",
                      "example": "2021-09-01T08:30:00"
                  },
                  "minimumBiddingRECQuantity": {
                      "maximum": 100000000,
                      "minimum": 1,
                      "type": "integer",
                      "description": "Bidders cannot bid lower than this quantity",
                      "format": "int32",
                      "example": 1000
                  },
                  "minimumRECQuantity": {
                      "maximum": 100000000,
                      "minimum": 1,
                      "type": "integer",
                      "description": "Auction Item quantity cannot be lower than this",
                      "format": "int32",
                      "example": 1000
                  },
                  "sellerDepositRequirement": {
                      "type": "integer",
                      "description": "Seller need to deposit minimum this amount (in USD)",
                      "format": "int32",
                      "example": 2000
                  },
                  "buyerDepositRequirement": {
                      "type": "integer",
                      "description": "Buyers need to deposit minimum this amount (in USD)",
                      "format": "int32",
                      "example": 2000
                  },
                  "buyerProcessingFee": {
                      "maximum": 1,
                      "minimum": 0,
                      "type": "number",
                      "description": "Buyer Processing Fee Percentage (allow up to 2 decimal, min: 0, max: 1)",
                      "format": "double",
                      "example": 0.2
                  },
                  "sellerProcessingFee": {
                      "maximum": 1,
                      "minimum": 0,
                      "type": "number",
                      "description": "Seller Processing Fee Percentage (allow up to 2 decimal, min: 0, max: 1)",
                      "format": "double",
                      "example": 0.2
                  },
                  "isPublic": {
                      "type": "boolean",
                      "description": "The auction is public for bidders or not (private)",
                      "example": false
                  },
                  "allowSellerEdit": {
                      "type": "boolean",
                      "description": "It is true if the seller is allowed to add items to the auction",
                      "example": false
                  }
              },
              "additionalProperties": false
          },
          "UpdateBidAuctionItemRequest": {
              "type": "object",
              "properties": {
                  "auctionItemId": {
                      "minimum": 1,
                      "type": "integer",
                      "format": "int64"
                  },
                  "bidValue": {
                      "minimum": 0.01,
                      "pattern": "^[0-9]*(\\.[0-9]{1,2})?$",
                      "type": "number",
                      "format": "double"
                  },
                  "bidRECQuantity": {
                      "maximum": 100000000,
                      "minimum": 1,
                      "type": "integer",
                      "format": "int32"
                  }
              },
              "additionalProperties": false
          },
          "UpdateBidMaxRecQuantityRequest": {
              "type": "object",
              "properties": {
                  "auctionId": {
                      "type": "integer",
                      "format": "int64"
                  },
                  "bidMaxRecQuantity": {
                      "maximum": 1000000000,
                      "minimum": -1,
                      "type": "integer",
                      "format": "int64"
                  }
              },
              "additionalProperties": false
          },
          "UpdateBusinessAccountInformationRequest": {
              "required": [
                  "businessType"
              ],
              "type": "object",
              "properties": {
                  "companySSTRegistrationNumber": {
                      "maxLength": 255,
                      "minLength": 0,
                      "type": "string",
                      "description": "Company SST Registration Number",
                      "nullable": true,
                      "example": "MLSIA10252023"
                  },
                  "tnbCaNumber": {
                      "maxLength": 255,
                      "minLength": 0,
                      "type": "string",
                      "description": "TNB CA Number",
                      "nullable": true,
                      "example": "MLSIA10252023"
                  },
                  "businessType": {
                      "maxLength": 255,
                      "minLength": 0,
                      "type": "string"
                  },
                  "otherBusinessType": {
                      "maxLength": 255,
                      "minLength": 0,
                      "type": "string",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "UpdateCompanyInfoRequest": {
              "required": [
                  "companyAddress",
                  "contactNumber",
                  "countryCode",
                  "phoneCode"
              ],
              "type": "object",
              "properties": {
                  "companyAddress": {
                      "maxLength": 255,
                      "minLength": 0,
                      "type": "string",
                      "description": "Company Address of Account",
                      "example": "Selangor, Batu Caves, Malaysia"
                  },
                  "countryCode": {
                      "maxLength": 2,
                      "minLength": 0,
                      "type": "string",
                      "description": "Country code of the Company of Account",
                      "example": "VN"
                  },
                  "provinceCode": {
                      "type": "string",
                      "description": "Province code of the Company of Account",
                      "nullable": true,
                      "example": "VN-52"
                  },
                  "contactNumber": {
                      "maxLength": 20,
                      "minLength": 4,
                      "pattern": "^(?:\\s*\\d){4}.*",
                      "type": "string",
                      "description": "Contact Number of Account",
                      "example": "3 6137-9579"
                  },
                  "phoneCode": {
                      "pattern": "^\\+\\d{1,4}$",
                      "type": "string",
                      "description": "Contact Number of Account",
                      "example": "+65"
                  },
                  "companyBusinessAddress": {
                      "maxLength": 255,
                      "minLength": 0,
                      "type": "string",
                      "description": "Company Business Address",
                      "nullable": true,
                      "example": "Selangor, Batu Caves, Malaysia"
                  },
                  "companyPICName": {
                      "maxLength": 255,
                      "minLength": 0,
                      "type": "string",
                      "description": "Company PIC Name",
                      "nullable": true,
                      "example": "Malaysia Solar Company"
                  },
                  "companyPICEmail": {
                      "maxLength": 255,
                      "minLength": 0,
                      "type": "string",
                      "description": "Company PIC Email",
                      "nullable": true,
                      "example": "user_1@yopmail.com"
                  },
                  "companySSTRegistrationNumber": {
                      "maxLength": 255,
                      "minLength": 0,
                      "type": "string",
                      "description": "Company SST Registration Number",
                      "nullable": true,
                      "example": "MLSIA10252023"
                  },
                  "tnbCaNumber": {
                      "maxLength": 255,
                      "minLength": 0,
                      "type": "string",
                      "description": "TNB CA Number",
                      "nullable": true,
                      "example": "MLSIA10252023"
                  },
                  "countryName": {
                      "type": "string",
                      "nullable": true
                  },
                  "provinceName": {
                      "type": "string",
                      "nullable": true
                  },
                  "businessType": {
                      "maxLength": 255,
                      "minLength": 0,
                      "type": "string",
                      "nullable": true
                  },
                  "otherBusinessType": {
                      "maxLength": 255,
                      "minLength": 0,
                      "type": "string",
                      "description": "Other Business Type",
                      "nullable": true,
                      "example": "Another Business Type"
                  }
              },
              "additionalProperties": false
          },
          "UpdateSellOrderDetailRequest": {
              "type": "object",
              "properties": {
                  "description": {
                      "maxLength": 4000,
                      "minLength": 0,
                      "type": "string",
                      "description": "Description of the sell order",
                      "nullable": true,
                      "example": "this is a description"
                  },
                  "longitude": {
                      "maximum": 180,
                      "minimum": -180,
                      "pattern": "^(0|-?\\d{0,3}(\\.\\d{0,6})?)$",
                      "type": "number",
                      "description": "Longitude of the device's address",
                      "format": "float",
                      "nullable": true,
                      "example": 1.289982
                  },
                  "latitude": {
                      "maximum": 90,
                      "minimum": -90,
                      "pattern": "^(0|-?\\d{0,3}(\\.\\d{0,6})?)$",
                      "type": "number",
                      "description": "Latitude of the device's address",
                      "format": "float",
                      "nullable": true,
                      "example": 103.866554
                  },
                  "address": {
                      "maxLength": 255,
                      "minLength": 0,
                      "type": "string",
                      "description": "Address of the device",
                      "nullable": true
                  },
                  "images": {
                      "type": "array",
                      "items": {
                          "type": "integer",
                          "format": "int64"
                      },
                      "description": "List blob Id of images",
                      "nullable": true
                  },
                  "thumbnailId": {
                      "type": "integer",
                      "description": "BlobId of which is thumbnail",
                      "format": "int64",
                      "nullable": true
                  }
              },
              "additionalProperties": false
          },
          "UpdateSellOrderRequest": {
              "required": [
                  "fuelType",
                  "sellOrderTitle",
                  "vintagePeriod",
                  "vintageYear"
              ],
              "type": "object",
              "properties": {
                  "sellOrderTitle": {
                      "maxLength": 250,
                      "minLength": 0,
                      "type": "string",
                      "description": "Title of the sell order",
                      "example": "Singapore RECs"
                  },
                  "publishTime": {
                      "type": "string",
                      "description": "Datetime that the sell order will be publish, it's UTC time",
                      "format": "date-time",
                      "example": "2021-09-01T08:30:00"
                  },
                  "unitPrice": {
                      "maximum": 9999999.99,
                      "minimum": 0.05,
                      "type": "number",
                      "description": "The price that seller want to sell (per REC)",
                      "format": "float",
                      "example": 0.2
                  },
                  "quantity": {
                      "maximum": 100000000,
                      "minimum": 1,
                      "type": "integer",
                      "description": "Quantity of RECs that seller want to sell",
                      "format": "int32",
                      "example": 20000
                  },
                  "provinceCode": {
                      "maxLength": 20,
                      "minLength": 0,
                      "type": "string",
                      "description": "Province code",
                      "nullable": true,
                      "example": "VN-52"
                  },
                  "fuelType": {
                      "maxLength": 50,
                      "minLength": 0,
                      "type": "string",
                      "description": "FuelType of these RECs that seller want to sell",
                      "example": "Solar"
                  },
                  "vintageYear": {
                      "maximum": 2147483647,
                      "minimum": 0,
                      "type": "integer",
                      "description": "The Vintage",
                      "format": "int32"
                  },
                  "vintagePeriod": {
                      "type": "string",
                      "description": "The period of the Vintage",
                      "example": "1H"
                  }
              },
              "additionalProperties": false
          },
          "UpdateTemplateContentRequest": {
              "type": "object",
              "properties": {
                  "content": {
                      "type": "string",
                      "nullable": true
                  },
                  "fileId": {
                      "type": "integer",
                      "format": "int64"
                  }
              },
              "additionalProperties": false
          },
          "VintagePeriodType": {
              "enum": [
                  "FullYear",
                  "FirstHalf",
                  "SecondHalf",
                  "FirstQuarter",
                  "SecondQuarter",
                  "ThirdQuarter",
                  "FourthQuarter"
              ],
              "type": "string"
          }
      },
      "securitySchemes": {
          "Bearer": {
              "type": "http",
              "description": "Enter JWT (without Bearer)",
              "scheme": "bearer",
              "bearerFormat": "JWT"
          }
      }
  },
  "tags": [
      {
          "name": "Data",
          "description": "Getting complimentary data: approver list, country code, ..."
      },
      {
          "name": "Files",
          "description": "Getting complimentary data: approver list, country code, ..."
      },
      {
          "name": "Templates",
          "description": "Template APIs"
      },
      {
          "name": "Profile",
          "description": "Manage User Profile and related information"
      },
      {
          "name": "UserAccount",
          "description": "Account APIs"
      },
      {
          "name": "UserBuyOrder",
          "description": "User APIs"
      },
      {
          "name": "UserSellOrder",
          "description": "User APIs"
      },
      {
          "name": "BidderAuction",
          "description": "API for bidders (buyers)"
      },
      {
          "name": "SellerAuction",
          "description": "APIs for sellers"
      },
      {
          "name": "UserAuction",
          "description": "Generic APIs for sellers and bidders"
      },
      {
          "name": "AdminAccount",
          "description": "Admin Account APIs"
      },
      {
          "name": "AdminAuction",
          "description": "Admin APIs"
      },
      {
          "name": "AdminBuyOrder",
          "description": "Admin APIs"
      },
      {
          "name": "AdminSellOrder",
          "description": "Admin APIs"
      }
  ]
}